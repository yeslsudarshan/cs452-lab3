.align	dlxos.s	/^.align 2$/
.align	trap_random.s	/^.align 2$/
.endproc	dlxos.s	/^.endproc _osinit$/
.endproc	dlxos.s	/^.endproc _intrhandler$/
.endproc	dlxos.s	/^.endproc _SetIntrs$/
.endproc	dlxos.s	/^.endproc _CurrentIntrs$/
.endproc	dlxos.s	/^.endproc _ProcessSleep$/
.endproc	synch.working.s	/^.endproc _isspace$/
.endproc	synch.working.s	/^.endproc _isxdigit$/
.endproc	synch.working.s	/^.endproc _QueueLinkInit$/
.endproc	synch.working.s	/^.endproc _QueueNext$/
.endproc	synch.working.s	/^.endproc _QueuePrev$/
.endproc	synch.working.s	/^.endproc _QueueFirst$/
.endproc	synch.working.s	/^.endproc _QueueLast$/
.endproc	synch.working.s	/^.endproc _QueueInsertAfter$/
.endproc	synch.working.s	/^.endproc _QueueInsertFirst$/
.endproc	synch.working.s	/^.endproc _QueueInsertLast$/
.endproc	synch.working.s	/^.endproc _QueueRemove$/
.endproc	synch.working.s	/^.endproc _QueueLength$/
.endproc	synch.working.s	/^.endproc _QueueEmpty$/
.endproc	synch.working.s	/^.endproc _SemInit$/
.endproc	synch.working.s	/^.endproc _SemWait$/
.endproc	synch.working.s	/^.endproc _SemSignal$/
.endproc	synch.working.s	/^.endproc _LockInit$/
.endproc	synch.working.s	/^.endproc _LockAcquire$/
.endproc	synch.working.s	/^.endproc _LockRelease$/
.endproc	synch.working.s	/^.endproc _CondInit$/
.endproc	synch.working.s	/^.endproc _CondWait$/
.endproc	synch.working.s	/^.endproc _CondSignal$/
.endproc	synch.working.s	/^.endproc _CondBroadcast$/
.endproc	trap_random.s	/^.endproc _random$/
.endproc	trap_random.s	/^.endproc _srandom$/
.endproc	usertraps.s	/^.endproc _Open$/
.endproc	usertraps.s	/^.endproc _Close$/
.endproc	usertraps.s	/^.endproc _Read$/
.endproc	usertraps.s	/^.endproc _Write$/
.endproc	usertraps.s	/^.endproc _Lseek$/
.endproc	usertraps.s	/^.endproc _Putchar$/
.endproc	usertraps.s	/^.endproc _Printf$/
.endproc	usertraps.s	/^.endproc _getpid$/
.endproc	usertraps.s	/^.endproc _process_create$/
.endproc	usertraps.s	/^.endproc _sem_create$/
.endproc	usertraps.s	/^.endproc _sem_wait$/
.endproc	usertraps.s	/^.endproc _sem_signal$/
.global	dlxos.s	/^.global _osinit$/
.global	dlxos.s	/^.global _intrhandler$/
.global	dlxos.s	/^.global _SetIntrs$/
.global	dlxos.s	/^.global _CurrentIntrs$/
.global	dlxos.s	/^.global _ProcessSleep$/
.global	synch.working.s	/^.global _isspace$/
.global	synch.working.s	/^.global _isxdigit$/
.global	synch.working.s	/^.global _QueueLinkInit$/
.global	synch.working.s	/^.global _QueueNext$/
.global	synch.working.s	/^.global _QueuePrev$/
.global	synch.working.s	/^.global _QueueFirst$/
.global	synch.working.s	/^.global _QueueLast$/
.global	synch.working.s	/^.global _QueueInsertAfter$/
.global	synch.working.s	/^.global _QueueInsertFirst$/
.global	synch.working.s	/^.global _QueueInsertLast$/
.global	synch.working.s	/^.global _QueueRemove$/
.global	synch.working.s	/^.global _QueueLength$/
.global	synch.working.s	/^.global _QueueEmpty$/
.global	synch.working.s	/^.global _SemInit$/
.global	synch.working.s	/^.global _SemWait$/
.global	synch.working.s	/^.global _SemSignal$/
.global	synch.working.s	/^.global _LockInit$/
.global	synch.working.s	/^.global _LockAcquire$/
.global	synch.working.s	/^.global _LockRelease$/
.global	synch.working.s	/^.global _CondInit$/
.global	synch.working.s	/^.global _CondWait$/
.global	synch.working.s	/^.global _CondSignal$/
.global	synch.working.s	/^.global _CondBroadcast$/
.global	trap_random.s	/^.global _random$/
.global	trap_random.s	/^.global _srandom$/
.global	usertraps.s	/^.global _Open$/
.global	usertraps.s	/^.global _Close$/
.global	usertraps.s	/^.global _Read$/
.global	usertraps.s	/^.global _Write$/
.global	usertraps.s	/^.global _Lseek$/
.global	usertraps.s	/^.global _Putchar$/
.global	usertraps.s	/^.global _Printf$/
.global	usertraps.s	/^.global _getpid$/
.global	usertraps.s	/^.global _process_create$/
.global	usertraps.s	/^.global _sem_create$/
.global	usertraps.s	/^.global _sem_wait$/
.global	usertraps.s	/^.global _sem_signal$/
.proc	dlxos.s	/^.proc _osinit$/
.proc	dlxos.s	/^.proc _intrhandler$/
.proc	dlxos.s	/^.proc _SetIntrs$/
.proc	dlxos.s	/^.proc _CurrentIntrs$/
.proc	dlxos.s	/^.proc _ProcessSleep$/
.proc	synch.working.s	/^.proc _isspace$/
.proc	synch.working.s	/^.proc _isxdigit$/
.proc	synch.working.s	/^.proc _QueueLinkInit$/
.proc	synch.working.s	/^.proc _QueueNext$/
.proc	synch.working.s	/^.proc _QueuePrev$/
.proc	synch.working.s	/^.proc _QueueFirst$/
.proc	synch.working.s	/^.proc _QueueLast$/
.proc	synch.working.s	/^.proc _QueueInsertAfter$/
.proc	synch.working.s	/^.proc _QueueInsertFirst$/
.proc	synch.working.s	/^.proc _QueueInsertLast$/
.proc	synch.working.s	/^.proc _QueueRemove$/
.proc	synch.working.s	/^.proc _QueueLength$/
.proc	synch.working.s	/^.proc _QueueEmpty$/
.proc	synch.working.s	/^.proc _SemInit$/
.proc	synch.working.s	/^.proc _SemWait$/
.proc	synch.working.s	/^.proc _SemSignal$/
.proc	synch.working.s	/^.proc _LockInit$/
.proc	synch.working.s	/^.proc _LockAcquire$/
.proc	synch.working.s	/^.proc _LockRelease$/
.proc	synch.working.s	/^.proc _CondInit$/
.proc	synch.working.s	/^.proc _CondWait$/
.proc	synch.working.s	/^.proc _CondSignal$/
.proc	synch.working.s	/^.proc _CondBroadcast$/
.proc	trap_random.s	/^.proc _random$/
.proc	trap_random.s	/^.proc _srandom$/
.proc	usertraps.s	/^.proc _Open$/
.proc	usertraps.s	/^.proc _Close$/
.proc	usertraps.s	/^.proc _Read$/
.proc	usertraps.s	/^.proc _Write$/
.proc	usertraps.s	/^.proc _Lseek$/
.proc	usertraps.s	/^.proc _Putchar$/
.proc	usertraps.s	/^.proc _Printf$/
.proc	usertraps.s	/^.proc _getpid$/
.proc	usertraps.s	/^.proc _process_create$/
.proc	usertraps.s	/^.proc _sem_create$/
.proc	usertraps.s	/^.proc _sem_wait$/
.proc	usertraps.s	/^.proc _sem_signal$/
/#copies	dlxos.ps	/^\/#copies 1 def$/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/.notdef	dlxos.ps	/^\/.notdef      	\/.notdef      	\/.notdef      	\/.not/
/Adieresis	dlxos.ps	/^\/Adieresis    	\/Aring        	\/AE           	\/Cced/
/Agrave	dlxos.ps	/^\/Agrave       	\/Aacute       	\/Acircumflex  	\/Atil/
/BeginEPSF	dlxos.ps	/^\/BeginEPSF {$/
/Box	dlxos.ps	/^\/Box {	% x y w h -> -			define box path$/
/Courier	dlxos.ps	/^\/Courier \/F-gs-font MF$/
/Courier-Bold	dlxos.ps	/^\/Courier-Bold \/HF-gs-font MF$/
/D	dlxos.ps	/^\/D            	\/E            	\/F            	\/G   /
/Egrave	dlxos.ps	/^\/Egrave       	\/Eacute       	\/Ecircumflex  	\/Edie/
/EndEPSF	dlxos.ps	/^\/EndEPSF {$/
/Eth	dlxos.ps	/^\/Eth          	\/Ntilde       	\/Ograve       	\/Oacu/
/F-gs-font	dlxos.ps	/^\/F-gs-font 10 10 SF$/
/H	dlxos.ps	/^\/H            	\/I            	\/J            	\/K   /
/HF	dlxos.ps	/^\/HF \/HF-gs-font findfont [HFpt_w 0 0 HFpt_h 0 0] m/
/HFpt_h	dlxos.ps	/^\/HFpt_h 10 def$/
/HFpt_w	dlxos.ps	/^\/HFpt_w 10 def$/
/Igrave	dlxos.ps	/^\/Igrave       	\/Iacute       	\/Icircumflex  	\/Idie/
/L	dlxos.ps	/^\/L            	\/M            	\/N            	\/O   /
/M	dlxos.ps	/^\/M {moveto} bind def$/
/MF	dlxos.ps	/^\/MF {	% fontname newfontname -> -	make a new encod/
/Ocircumflex	dlxos.ps	/^\/Ocircumflex  	\/Otilde       	\/Odieresis    	\/mult/
/Oslash	dlxos.ps	/^\/Oslash       	\/Ugrave       	\/Uacute       	\/Ucir/
/P	dlxos.ps	/^\/P            	\/Q            	\/R            	\/S   /
/S	dlxos.ps	/^\/S {	% showpage protecting gstate$/
/SF	dlxos.ps	/^\/SF { % fontname width height -> -	set a new font$/
/SUF	dlxos.ps	/^\/SUF { % fontname width height -> -	set a new user/
/T	dlxos.ps	/^\/T            	\/U            	\/V            	\/W   /
/Udieresis	dlxos.ps	/^\/Udieresis    	\/Yacute       	\/Thorn        	\/germ/
/X	dlxos.ps	/^\/X            	\/Y            	\/Z            	\/brac/
/_R	dlxos.ps	/^\/_R {	% restore from saved state$/
/_S	dlxos.ps	/^\/_S {	% save current state$/
/acute	dlxos.ps	/^\/acute        	\/mu           	\/paragraph    	\/bull/
/adieresis	dlxos.ps	/^\/adieresis    	\/aring        	\/ae           	\/cced/
/agrave	dlxos.ps	/^\/agrave       	\/aacute       	\/acircumflex  	\/atil/
/at	dlxos.ps	/^\/at           	\/A            	\/B            	\/C   /
/backslash	dlxos.ps	/^\/backslash    	\/bracketright 	\/asciicircum  	\/unde/
/bar	dlxos.ps	/^\/bar          	\/braceright   	\/tilde        	\/.not/
/bgs	dlxos.ps	/^\/bgs {	% x y height blskip gray str -> -	show stri/
/cedilla	dlxos.ps	/^\/cedilla      	\/onesuperior  	\/ordmasculine 	\/guil/
/cols	dlxos.ps	/^\/cols 1 def$/
/column_borders	dlxos.ps	/^\/column_borders {$/
/column_lines	dlxos.ps	/^\/column_lines {$/
/comma	dlxos.ps	/^\/comma        	\/hyphen       	\/period       	\/slas/
/currency	dlxos.ps	/^\/currency     	\/yen          	\/brokenbar    	\/sect/
/d	dlxos.ps	/^\/d            	\/e            	\/f            	\/g   /
/d_footer_h	dlxos.ps	/^\/d_footer_h 0 def$/
/d_footer_w	dlxos.ps	/^\/d_footer_w 564 def$/
/d_footer_x	dlxos.ps	/^\/d_footer_x 0 def$/
/d_footer_y	dlxos.ps	/^\/d_footer_y 0 def$/
/d_header_h	dlxos.ps	/^\/d_header_h 15 def$/
/d_header_w	dlxos.ps	/^\/d_header_w 564 def$/
/d_header_x	dlxos.ps	/^\/d_header_x 0 def$/
/d_header_y	dlxos.ps	/^\/d_header_y 729 def$/
/d_output_h	dlxos.ps	/^\/d_output_h 729 def$/
/d_output_w	dlxos.ps	/^\/d_output_w 564 def$/
/d_page_h	dlxos.ps	/^\/d_page_h 744 def$/
/d_page_w	dlxos.ps	/^\/d_page_w 564 def$/
/degree	dlxos.ps	/^\/degree       	\/plusminus    	\/twosuperior  	\/thre/
/dieresis	dlxos.ps	/^\/dieresis     	\/copyright    	\/ordfeminine  	\/guil/
/do_header	dlxos.ps	/^\/do_header {	% print default simple header$/
/dollar	dlxos.ps	/^\/dollar       	\/percent      	\/ampersand    	\/quot/
/draw_underlay	dlxos.ps	/^\/draw_underlay {$/
/egrave	dlxos.ps	/^\/egrave       	\/eacute       	\/ecircumflex  	\/edie/
/eight	dlxos.ps	/^\/eight        	\/nine         	\/colon        	\/semi/
/encoding_vector	dlxos.ps	/^\/encoding_vector [$/
/eth	dlxos.ps	/^\/eth          	\/ntilde       	\/ograve       	\/oacu/
/fdir	dlxos.ps	/^\/fdir () def$/
/fdir	dlxos.ps	/^\/fdir () def$/
/fdir	dlxos.ps	/^\/fdir () def$/
/fdir	dlxos.ps	/^\/fdir () def$/
/fdir	dlxos.ps	/^\/fdir () def$/
/fdir	dlxos.ps	/^\/fdir () def$/
/fmodstr	dlxos.ps	/^\/fmodstr (Tue Nov 07 14:08:38 2000) def$/
/fmodstr	dlxos.ps	/^\/fmodstr (Tue Nov 07 14:08:38 2000) def$/
/fmodstr	dlxos.ps	/^\/fmodstr (Tue Nov 07 14:08:38 2000) def$/
/fmodstr	dlxos.ps	/^\/fmodstr (Tue Nov 07 14:08:38 2000) def$/
/fmodstr	dlxos.ps	/^\/fmodstr (Tue Nov 07 14:08:38 2000) def$/
/fmodstr	dlxos.ps	/^\/fmodstr (Tue Nov 07 14:08:38 2000) def$/
/fname	dlxos.ps	/^\/fname (dlxos.s) def$/
/fname	dlxos.ps	/^\/fname (dlxos.s) def$/
/fname	dlxos.ps	/^\/fname (dlxos.s) def$/
/fname	dlxos.ps	/^\/fname (dlxos.s) def$/
/fname	dlxos.ps	/^\/fname (dlxos.s) def$/
/fname	dlxos.ps	/^\/fname (dlxos.s) def$/
/four	dlxos.ps	/^\/four         	\/five         	\/six          	\/seve/
/ftail	dlxos.ps	/^\/ftail (dlxos.s) def$/
/ftail	dlxos.ps	/^\/ftail (dlxos.s) def$/
/ftail	dlxos.ps	/^\/ftail (dlxos.s) def$/
/ftail	dlxos.ps	/^\/ftail (dlxos.s) def$/
/ftail	dlxos.ps	/^\/ftail (dlxos.s) def$/
/ftail	dlxos.ps	/^\/ftail (dlxos.s) def$/
/h	dlxos.ps	/^\/h            	\/i            	\/j            	\/k   /
/highlight_bars	dlxos.ps	/^\/highlight_bars {	% nlines lineheight output_y_mar/
/igrave	dlxos.ps	/^\/igrave       	\/iacute       	\/icircumflex  	\/idie/
/l	dlxos.ps	/^\/l            	\/m            	\/n            	\/o   /
/languagelevel	dlxos.ps	/^\/languagelevel where {$/
/less	dlxos.ps	/^\/less         	\/equal        	\/greater      	\/ques/
/line_highlight	dlxos.ps	/^\/line_highlight {	% x y width height gray -> -$/
/logicalnot	dlxos.ps	/^\/logicalnot   	\/hyphen       	\/registered   	\/macr/
/ocircumflex	dlxos.ps	/^\/ocircumflex  	\/otilde       	\/odieresis    	\/divi/
/onequarter	dlxos.ps	/^\/onequarter   	\/onehalf      	\/threequarters	\/ques/
/oslash	dlxos.ps	/^\/oslash       	\/ugrave       	\/uacute       	\/ucir/
/p	dlxos.ps	/^\/p            	\/q            	\/r            	\/s   /
/page_prefeed	dlxos.ps	/^\/page_prefeed {		% bool -> -$/
/pagenum	dlxos.ps	/^\/pagenum 1 def$/
/pagenum	dlxos.ps	/^\/pagenum 2 def$/
/pagenum	dlxos.ps	/^\/pagenum 3 def$/
/pagenum	dlxos.ps	/^\/pagenum 4 def$/
/pagenum	dlxos.ps	/^\/pagenum 5 def$/
/pagenum	dlxos.ps	/^\/pagenum 6 def$/
/pagenumstr	dlxos.ps	/^\/pagenumstr (1) def$/
/pagenumstr	dlxos.ps	/^\/pagenumstr (2) def$/
/pagenumstr	dlxos.ps	/^\/pagenumstr (3) def$/
/pagenumstr	dlxos.ps	/^\/pagenumstr (4) def$/
/pagenumstr	dlxos.ps	/^\/pagenumstr (5) def$/
/pagenumstr	dlxos.ps	/^\/pagenumstr (6) def$/
/parenleft	dlxos.ps	/^\/parenleft    	\/parenright   	\/asterisk     	\/plus/
/quoteleft	dlxos.ps	/^\/quoteleft    	\/a            	\/b            	\/c   /
/s	dlxos.ps	/^\/s {show} bind def$/
/space	dlxos.ps	/^\/space        	\/exclam       	\/quotedbl     	\/numb/
/space	dlxos.ps	/^\/space        	\/exclamdown   	\/cent         	\/ster/
/t	dlxos.ps	/^\/t            	\/u            	\/v            	\/w   /
/udieresis	dlxos.ps	/^\/udieresis    	\/yacute       	\/thorn        	\/ydie/
/underlay	dlxos.ps	/^\/underlay {	% - -> -$/
/user_header_p	dlxos.ps	/^\/user_header_p false def$/
/user_header_p	dlxos.ps	/^\/user_header_p false def$/
/user_header_p	dlxos.ps	/^\/user_header_p false def$/
/user_header_p	dlxos.ps	/^\/user_header_p false def$/
/user_header_p	dlxos.ps	/^\/user_header_p false def$/
/user_header_p	dlxos.ps	/^\/user_header_p false def$/
/user_underlay	dlxos.ps	/^\/user_underlay {	% - -> -$/
/wrapped_line_mark	dlxos.ps	/^\/wrapped_line_mark {	% x y charwith charheight typ/
/x	dlxos.ps	/^\/x            	\/y            	\/z            	\/brac/
/zero	dlxos.ps	/^\/zero         	\/one          	\/two          	\/thre/
AS	Makefile	/^AS = dlxasm$/
ASSERT	dlxos.h	/^#define	ASSERT(cond,s)	(cond ? 0 : printf ("%s: %s/
CC	Makefile	/^CC = gcc-dlx$/
CFLAGS	Makefile	/^CFLAGS = -mtraps -O3$/
Close	filesys.h	/^  int	(*Close)(int);$/
Cond	synch.working.h	34
Cond	synch.working.h	38
Cpu::CauseException	dlxsim.cc	/^Cpu::CauseException (int excType)$/
Cpu::Close	dlxsim.cc	/^Cpu::Close ()$/
Cpu::Cpu	dlxsim.cc	/^Cpu::Cpu (int msize)$/
Cpu::DoRfe	dlxsim.cc	/^Cpu::DoRfe (uint32 inst)$/
Cpu::ExecOne	dlxsim.cc	/^Cpu::ExecOne ()$/
Cpu::Exit	dlxsim.cc	/^Cpu::Exit ()$/
Cpu::FileIo	dlxsim.cc	/^Cpu::FileIo (int kind)$/
Cpu::GetIFields	dlxsim.cc	/^Cpu::GetIFields (uint32 inst, uint32& src, uint32&/
Cpu::GetJFields	dlxsim.cc	/^Cpu::GetJFields (uint32 inst, uint32& jaddr)$/
Cpu::GetParam	dlxsim.cc	/^Cpu::GetParam (int p)$/
Cpu::GetRFields	dlxsim.cc	/^Cpu::GetRFields (uint32 inst, uint32& src1, uint32/
Cpu::IgnoreExit	dlxsim.cc	/^Cpu::IgnoreExit (int ignore)$/
Cpu::Jump	dlxsim.cc	/^Cpu::Jump (uint32 jmpDst)$/
Cpu::KbdGetChar	dlxsim.cc	/^Cpu::KbdGetChar ()$/
Cpu::LoadMemory	dlxsim.cc	/^Cpu::LoadMemory (const char *file, uint32& startAt/
Cpu::Open	dlxsim.cc	/^Cpu::Open ()$/
Cpu::OutputBasicBlockActual	dlxsim.cc	/^Cpu::OutputBasicBlockActual ()$/
Cpu::Printf	dlxsim.cc	/^Cpu::Printf ()$/
Cpu::Random	dlxsim.cc	/^Cpu::Random ()$/
Cpu::Read	dlxsim.cc	/^Cpu::Read ()$/
Cpu::ReadWord	dlxsim.cc	/^Cpu::ReadWord (uint32 vaddr, uint32 &val, uint32 o/
Cpu::Seek	dlxsim.cc	/^Cpu::Seek ()$/
Cpu::SetResult	dlxsim.cc	/^Cpu::SetResult (uint32 r)$/
Cpu::SetTimer	dlxsim.cc	/^Cpu::SetTimer (uint32 usecs)$/
Cpu::SignExtend16	dlxsim.cc	/^Cpu::SignExtend16 (uint32& v)$/
Cpu::SignExtend8	dlxsim.cc	/^Cpu::SignExtend8 (uint32& v)$/
Cpu::Srandom	dlxsim.cc	/^Cpu::Srandom ()$/
Cpu::TestWriteWord	dlxsim.cc	/^Cpu::TestWriteWord (uint32 vaddr)$/
Cpu::Timerget	dlxsim.cc	/^Cpu::Timerget()$/
Cpu::TraceFile	dlxsim.cc	/^Cpu::TraceFile (char *name)$/
Cpu::VaddrToPaddr	dlxsim.cc	/^Cpu::VaddrToPaddr (uint32 vaddr, uint32& paddr, ui/
Cpu::Write	dlxsim.cc	/^Cpu::Write ()$/
Cpu::WriteWord	dlxsim.cc	/^Cpu::WriteWord (uint32 vaddr, uint32 val)$/
Cpu::fpInstrs	dlxsim.cc	1854
Cpu::regInstrs	dlxsim.cc	1782
Cpu::rrrInstrs	dlxsim.cc	1710
DLX_KBD_GETCHAR	traps.h	62
DLX_KBD_INTR	traps.h	64
DLX_KBD_NCHARSIN	traps.h	63
DLX_KBD_NCHARSOUT	traps.h	61
DLX_KBD_PUTCHAR	traps.h	60
DLX_MEMSIZE_ADDRESS	memory.h	14
DLX_PROCESS_QUANTUM	dlxos.h	12
DLX_STATUS_FPTRUE	dlx.h	9
DLX_STATUS_INTRMASK	dlx.h	8
DLX_STATUS_PAGE_TABLE	dlx.h	11
DLX_STATUS_SYSMODE	dlx.h	10
DLX_STATUS_TLB	dlx.h	12
DLX_TIMER_ADDRESS	traps.h	59
Delete	filesys.h	/^  int	(*Delete)(const char *);$/
DisableIntrs	dlxos.h	/^DisableIntrs ()$/
Dlx	filesys.h	60
EnableIntrs	dlxos.h	/^EnableIntrs ()$/
FS_BUFFER_SIZE	filesys.h	33
FS_FS_BUILTIN	filesys.h	16
FS_FS_DLXOS	filesys.h	17
FS_MAX_OPEN_FILES	filesys.h	35
FS_MODE_CREATE	filesys.h	24
FS_MODE_READ	filesys.h	19
FS_MODE_RW	filesys.h	21
FS_MODE_WRITE	filesys.h	20
FS_SEEK_CUR	filesys.h	30
FS_SEEK_END	filesys.h	31
FS_SEEK_SET	filesys.h	29
FdValid	filesys.c	/^FdValid (int fd)$/
Fs	filesys.h	37
Fs	filesys.h	44
FsClose	filesys.c	/^FsClose (int fd)$/
FsDelete	filesys.c	/^FsDelete (const char *name)$/
FsDlxClose	filesys.c	/^FsDlxClose (int f)$/
FsDlxDelete	filesys.c	/^FsDlxDelete (const char *file)$/
FsDlxInfo	filesys.h	50
FsDlxInfo	filesys.h	52
FsDlxIo	filesys.c	/^FsDlxIo (int fd, char *buf, int n, int which)$/
FsDlxOpen	filesys.c	/^FsDlxOpen (int f, const char *name, int mode)$/
FsDlxRead	filesys.c	/^FsDlxRead (int fd, char *buf, int n)$/
FsDlxSeek	filesys.c	/^FsDlxSeek (int f, int offset, int whence)$/
FsDlxWrite	filesys.c	/^FsDlxWrite (int fd, char *buf, int n)$/
FsFreeEntry	filesys.c	/^FsFreeEntry (int x)$/
FsModuleInit	filesys.c	/^FsModuleInit ()$/
FsOpen	filesys.c	/^FsOpen (const char *name, int mode)$/
FsOpenFile	filesys.h	54
FsOpenFile	filesys.h	62
FsRead	filesys.c	/^FsRead (int fd, char *buf, int n)$/
FsSeek	filesys.c	/^FsSeek (int fd, int offset, int whence)$/
FsUnixClose	filesys.c	/^FsUnixClose (int x)$/
FsUnixDelete	filesys.c	/^FsUnixDelete (const char *name)$/
FsUnixInfo	filesys.h	46
FsUnixInfo	filesys.h	48
FsUnixOpen	filesys.c	/^FsUnixOpen (int x, const char *name, int mode)$/
FsUnixRead	filesys.c	/^FsUnixRead (int x, char *buf, int n)$/
FsUnixSeek	filesys.c	/^FsUnixSeek (int x, int offset, int where)$/
FsUnixWrite	filesys.c	/^FsUnixWrite (int x, char *buf, int n)$/
FsWrite	filesys.c	/^FsWrite (int fd, char *buf, int n)$/
GetCurrentPid	process.c	/^unsigned GetCurrentPid()$/
GetIntFromTrapArg	traps.c	/^static int GetIntFromTrapArg(uint32 *trapArgs, int/
GetUintFromTrapArg	traps.c	/^static uint32 GetUintFromTrapArg(uint32 *trapArgs,/
INCS	Makefile	/^INCS = dlxos.h traps.h filesys.h memory.h misc.h p/
INVALID_PROC	synch.h	20
INVALID_SEM	lab3.h	6
INVALID_SEM	synch.h	19
InstAdd	dlxsim.cc	/^InstAdd (uint32 inst, Cpu *cpu)$/
InstAddd	dlxsim.cc	/^InstAddd (uint32 inst, Cpu *cpu)$/
InstAddf	dlxsim.cc	/^InstAddf (uint32 inst, Cpu *cpu)$/
InstAddi	dlxsim.cc	/^InstAddi (uint32 inst, Cpu *cpu)$/
InstAddu	dlxsim.cc	/^InstAddu (uint32 inst, Cpu *cpu)$/
InstAddui	dlxsim.cc	/^InstAddui (uint32 inst, Cpu *cpu)$/
InstAnd	dlxsim.cc	/^InstAnd (uint32 inst, Cpu *cpu)$/
InstAndi	dlxsim.cc	/^InstAndi (uint32 inst, Cpu *cpu)$/
InstBeqz	dlxsim.cc	/^InstBeqz (uint32 inst, Cpu *cpu)$/
InstBfpf	dlxsim.cc	/^InstBfpf (uint32 inst, Cpu *cpu)$/
InstBfpt	dlxsim.cc	/^InstBfpt (uint32 inst, Cpu *cpu)$/
InstBnez	dlxsim.cc	/^InstBnez (uint32 inst, Cpu *cpu)$/
InstCvtd2f	dlxsim.cc	/^InstCvtd2f (uint32 inst, Cpu *cpu)$/
InstCvtd2i	dlxsim.cc	/^InstCvtd2i (uint32 inst, Cpu *cpu)$/
InstCvtf2d	dlxsim.cc	/^InstCvtf2d (uint32 inst, Cpu *cpu)$/
InstCvtf2i	dlxsim.cc	/^InstCvtf2i (uint32 inst, Cpu *cpu)$/
InstCvti2d	dlxsim.cc	/^InstCvti2d (uint32 inst, Cpu *cpu)$/
InstCvti2f	dlxsim.cc	/^InstCvti2f (uint32 inst, Cpu *cpu)$/
InstDiv	dlxsim.cc	/^InstDiv (uint32 inst, Cpu *cpu)$/
InstDivd	dlxsim.cc	/^InstDivd (uint32 inst, Cpu *cpu)$/
InstDivf	dlxsim.cc	/^InstDivf (uint32 inst, Cpu *cpu)$/
InstDivu	dlxsim.cc	/^InstDivu (uint32 inst, Cpu *cpu)$/
InstEqd	dlxsim.cc	/^InstEqd (uint32 inst, Cpu *cpu)$/
InstEqf	dlxsim.cc	/^InstEqf (uint32 inst, Cpu *cpu)$/
InstGed	dlxsim.cc	/^InstGed (uint32 inst, Cpu *cpu)$/
InstGef	dlxsim.cc	/^InstGef (uint32 inst, Cpu *cpu)$/
InstGtd	dlxsim.cc	/^InstGtd (uint32 inst, Cpu *cpu)$/
InstGtf	dlxsim.cc	/^InstGtf (uint32 inst, Cpu *cpu)$/
InstIllegal	dlxsim.cc	/^InstIllegal (uint32 inst, Cpu *cpu)$/
InstJal	dlxsim.cc	/^InstJal (uint32 inst, Cpu *cpu)$/
InstJalr	dlxsim.cc	/^InstJalr (uint32 inst, Cpu *cpu)$/
InstJmp	dlxsim.cc	/^InstJmp (uint32 inst, Cpu *cpu)$/
InstJr	dlxsim.cc	/^InstJr (uint32 inst, Cpu *cpu)$/
InstLb	dlxsim.cc	/^InstLb (uint32 inst, Cpu *cpu)$/
InstLbu	dlxsim.cc	/^InstLbu (uint32 inst, Cpu *cpu)$/
InstLd	dlxsim.cc	/^InstLd (uint32 inst, Cpu *cpu)$/
InstLed	dlxsim.cc	/^InstLed (uint32 inst, Cpu *cpu)$/
InstLef	dlxsim.cc	/^InstLef (uint32 inst, Cpu *cpu)$/
InstLf	dlxsim.cc	/^InstLf (uint32 inst, Cpu *cpu)$/
InstLh	dlxsim.cc	/^InstLh (uint32 inst, Cpu *cpu)$/
InstLhi	dlxsim.cc	/^InstLhi (uint32 inst, Cpu *cpu)$/
InstLhu	dlxsim.cc	/^InstLhu (uint32 inst, Cpu *cpu)$/
InstLtd	dlxsim.cc	/^InstLtd (uint32 inst, Cpu *cpu)$/
InstLtf	dlxsim.cc	/^InstLtf (uint32 inst, Cpu *cpu)$/
InstLw	dlxsim.cc	/^InstLw (uint32 inst, Cpu *cpu)$/
InstMovd	dlxsim.cc	/^InstMovd (uint32 inst, Cpu *cpu)$/
InstMovf	dlxsim.cc	/^InstMovf (uint32 inst, Cpu *cpu)$/
InstMovfp2i	dlxsim.cc	/^InstMovfp2i (uint32 inst, Cpu *cpu)$/
InstMovi2fp	dlxsim.cc	/^InstMovi2fp (uint32 inst, Cpu *cpu)$/
InstMovi2s	dlxsim.cc	/^InstMovi2s (uint32 inst, Cpu *cpu)$/
InstMovs2i	dlxsim.cc	/^InstMovs2i (uint32 inst, Cpu *cpu)$/
InstMult	dlxsim.cc	/^InstMult (uint32 inst, Cpu *cpu)$/
InstMultd	dlxsim.cc	/^InstMultd (uint32 inst, Cpu *cpu)$/
InstMultf	dlxsim.cc	/^InstMultf (uint32 inst, Cpu *cpu)$/
InstMultu	dlxsim.cc	/^InstMultu (uint32 inst, Cpu *cpu)$/
InstNed	dlxsim.cc	/^InstNed (uint32 inst, Cpu *cpu)$/
InstNef	dlxsim.cc	/^InstNef (uint32 inst, Cpu *cpu)$/
InstNop	dlxsim.cc	/^InstNop (uint32, Cpu *cpu)$/
InstOr	dlxsim.cc	/^InstOr (uint32 inst, Cpu *cpu)$/
InstOri	dlxsim.cc	/^InstOri (uint32 inst, Cpu *cpu)$/
InstRfe	dlxsim.cc	/^InstRfe (uint32 inst, Cpu *cpu)$/
InstSb	dlxsim.cc	/^InstSb (uint32 inst, Cpu *cpu)$/
InstSd	dlxsim.cc	/^InstSd (uint32 inst, Cpu *cpu)$/
InstSeq	dlxsim.cc	/^InstSeq (uint32 inst, Cpu *cpu)$/
InstSeqi	dlxsim.cc	/^InstSeqi (uint32 inst, Cpu *cpu)$/
InstSf	dlxsim.cc	/^InstSf (uint32 inst, Cpu *cpu)$/
InstSge	dlxsim.cc	/^InstSge (uint32 inst, Cpu *cpu)$/
InstSgei	dlxsim.cc	/^InstSgei (uint32 inst, Cpu *cpu)$/
InstSgt	dlxsim.cc	/^InstSgt (uint32 inst, Cpu *cpu)$/
InstSgti	dlxsim.cc	/^InstSgti (uint32 inst, Cpu *cpu)$/
InstSh	dlxsim.cc	/^InstSh (uint32 inst, Cpu *cpu)$/
InstSle	dlxsim.cc	/^InstSle (uint32 inst, Cpu *cpu)$/
InstSlei	dlxsim.cc	/^InstSlei (uint32 inst, Cpu *cpu)$/
InstSll	dlxsim.cc	/^InstSll (uint32 inst, Cpu *cpu)$/
InstSlli	dlxsim.cc	/^InstSlli (uint32 inst, Cpu *cpu)$/
InstSlt	dlxsim.cc	/^InstSlt (uint32 inst, Cpu *cpu)$/
InstSlti	dlxsim.cc	/^InstSlti (uint32 inst, Cpu *cpu)$/
InstSne	dlxsim.cc	/^InstSne (uint32 inst, Cpu *cpu)$/
InstSnei	dlxsim.cc	/^InstSnei (uint32 inst, Cpu *cpu)$/
InstSra	dlxsim.cc	/^InstSra (uint32 inst, Cpu *cpu)$/
InstSrai	dlxsim.cc	/^InstSrai (uint32 inst, Cpu *cpu)$/
InstSrl	dlxsim.cc	/^InstSrl (uint32 inst, Cpu *cpu)$/
InstSrli	dlxsim.cc	/^InstSrli (uint32 inst, Cpu *cpu)$/
InstSub	dlxsim.cc	/^InstSub (uint32 inst, Cpu *cpu)$/
InstSubd	dlxsim.cc	/^InstSubd (uint32 inst, Cpu *cpu)$/
InstSubf	dlxsim.cc	/^InstSubf (uint32 inst, Cpu *cpu)$/
InstSubi	dlxsim.cc	/^InstSubi (uint32 inst, Cpu *cpu)$/
InstSubu	dlxsim.cc	/^InstSubu (uint32 inst, Cpu *cpu)$/
InstSubui	dlxsim.cc	/^InstSubui (uint32 inst, Cpu *cpu)$/
InstSw	dlxsim.cc	/^InstSw (uint32 inst, Cpu *cpu)$/
InstTrap	dlxsim.cc	/^InstTrap (uint32 inst, Cpu *cpu)$/
InstXor	dlxsim.cc	/^InstXor (uint32 inst, Cpu *cpu)$/
InstXori	dlxsim.cc	/^InstXori (uint32 inst, Cpu *cpu)$/
KbdModuleInit	traps.c	/^KbdModuleInit ()$/
L106	synch.working.s	/^L106:$/
L107	synch.working.s	/^L107:$/
L108	synch.working.s	/^L108:$/
L11	synch.working.s	/^L11:$/
L12	synch.working.s	/^L12:$/
L1_MAX_ENTRIES	memory.h	33
L2_MAX_ENTRIES	memory.h	34
L38	synch.working.s	/^L38:$/
L48	synch.working.s	/^L48:$/
L49	synch.working.s	/^L49:$/
L5	synch.working.s	/^L5:$/
L50	synch.working.s	/^L50:$/
L52	synch.working.s	/^L52:$/
L53	synch.working.s	/^L53:$/
L58	synch.working.s	/^L58:$/
L59	synch.working.s	/^L59:$/
L6	synch.working.s	/^L6:$/
L60	synch.working.s	/^L60:$/
L63	synch.working.s	/^L63:$/
L64	synch.working.s	/^L64:$/
L65	synch.working.s	/^L65:$/
L78	synch.working.s	/^L78:$/
L80	synch.working.s	/^L80:$/
L89	synch.working.s	/^L89:$/
L91	synch.working.s	/^L91:$/
L95	synch.working.s	/^L95:$/
LC0	synch.working.s	/^LC0:$/
LC1	synch.working.s	/^LC1:$/
LC2	synch.working.s	/^LC2:$/
LC3	synch.working.s	/^LC3:$/
Link	queue.h	19
Link	queue.h	24
Lock	synch.working.h	28
Lock	synch.working.h	32
MAIN_TEST	userprog.c	2
MAIN_TEST	userprog.c~	2
MAX_ARGS	process.h	62
MAX_SEMS	synch.h	15
MEMORY_L1_PAGE_SIZE_BITS	memory.h	25
MEMORY_L2_PAGE_SIZE_BITS	memory.h	26
MEMORY_MAX_PAGES	memory.h	30
MEMORY_PAGE_MASK	memory.h	29
MEMORY_PAGE_SIZE	memory.h	27
MEMORY_PTE_DIRTY	memory.h	40
MEMORY_PTE_MASK	memory.h	43
MEMORY_PTE_REFERENCED	memory.h	42
MEMORY_PTE_VALID	memory.h	38
Makefile.depend	Makefile	/^Makefile.depend: depend$/
MemoryAllocPage	memory.c	/^MemoryAllocPage ()$/
MemoryCopySystemToUser	memory.c	/^MemoryCopySystemToUser (PCB *pcb, unsigned char *f/
MemoryCopyUserToSystem	memory.c	/^MemoryCopyUserToSystem (PCB *pcb, unsigned char *f/
MemoryFreePage	memory.c	/^MemoryFreePage(uint32 page)$/
MemoryFreePte	memory.c	/^MemoryFreePte (uint32 pte)$/
MemoryGetOperandAddress	memory.c	/^MemoryGetOperandAddress (PCB *pcb, uint32 instr)$/
MemoryGetSize	memory.c	/^MemoryGetSize ()$/
MemoryModuleInit	memory.c	/^MemoryModuleInit ()$/
MemoryPteToPage	memory.c	/^MemoryPteToPage (uint32 pte)$/
MemorySetFreemap	memory.c	/^MemorySetFreemap (int p, int b)$/
MemorySetupPte	memory.c	/^MemorySetupPte (uint32 page)$/
MemoryTranslateUserToSystem	memory.c	/^MemoryTranslateUserToSystem (PCB *pcb, uint32 addr/
Mprocess	process.c	/^main (int argc, char *argv[])$/
Muserprog	userprog.c	/^main(int argc, char *argv[])$/
Muserprog.c~	userprog.c~	/^main(int argc, char *argv[])$/
Muserprog1	userprog1.c	/^main()$/
Muserprog2	userprog2.c	/^main()$/
MyFuncRetZero	process.c	/^float MyFuncRetZero()$/
NULL	lab3.h	5
NULL	queue.h	14
OBJS	Makefile	/^OBJS = $(addsuffix .o, $(basename $(SRCS)))$/
Open	filesys.h	/^  int	(*Open)(int, const char *, int);$/
PCB	process.h	34
PCB	process.h	43
PROCESS_INIT_ISR_SYS	process.h	19
PROCESS_INIT_ISR_USER	process.h	20
PROCESS_MAX_PROCS	process.h	17
PROCESS_STACK_CAUSE	process.h	53
PROCESS_STACK_FAULT	process.h	54
PROCESS_STACK_FRAME_SIZE	process.h	59
PROCESS_STACK_FREG	process.h	50
PROCESS_STACK_IAR	process.h	51
PROCESS_STACK_IREG	process.h	47
PROCESS_STACK_ISR	process.h	52
PROCESS_STACK_PREV_FRAME	process.h	58
PROCESS_STACK_PTBASE	process.h	55
PROCESS_STACK_PTBITS	process.h	57
PROCESS_STACK_PTSIZE	process.h	56
PROCESS_STATUS_FREE	process.h	22
PROCESS_STATUS_MASK	process.h	27
PROCESS_STATUS_RUNNABLE	process.h	23
PROCESS_STATUS_STARTING	process.h	25
PROCESS_STATUS_WAITING	process.h	24
PROCESS_STATUS_ZOMBIE	process.h	26
PROCESS_TYPE_SYSTEM	process.h	28
PROCESS_TYPE_USER	process.h	29
PageFaultHandler	process.c	/^void PageFaultHandler()$/
ProcessDestroy	process.c	/^ProcessDestroy (PCB *pcb)$/
ProcessExit	process.c	/^ProcessExit ()$/
ProcessFork	process.c	/^ProcessFork (VoidFunc func, uint32 param, char *na/
ProcessFreeResources	process.c	/^ProcessFreeResources (PCB *pcb)$/
ProcessGetCodeInfo	process.c	/^ProcessGetCodeInfo (const char *file, uint32 *star/
ProcessGetFromFile	process.c	/^ProcessGetFromFile (int fd, unsigned char *buf, ui/
ProcessKill	process.c	/^void ProcessKill (PCB *pcb)$/
ProcessModuleInit	process.c	/^ProcessModuleInit ()$/
ProcessSchedule	process.c	/^ProcessSchedule ()$/
ProcessSetResult	process.c	/^ProcessSetResult (PCB * pcb, uint32 result)$/
ProcessSetStatus	process.c	/^ProcessSetStatus (PCB *pcb, int status)$/
ProcessSuspend	process.c	/^ProcessSuspend (PCB *suspend)$/
ProcessWakeup	process.c	/^ProcessWakeup (PCB *wakeup)$/
QUEUE_MAX_LINKS	queue.h	17
Queue	queue.h	26
Queue	queue.h	30
QueueAllocLink	queue.c	/^QueueAllocLink ()$/
QueueEmpty	queue.h	/^QueueEmpty (Queue *q)$/
QueueFirst	queue.h	/^QueueFirst (Queue *q)$/
QueueFreeLink	queue.c	/^QueueFreeLink (Link *l)$/
QueueInit	queue.c	/^QueueInit (Queue *q)$/
QueueInsertAfter	queue.h	/^QueueInsertAfter (Queue *q, Link *after, Link *l)$/
QueueInsertFirst	queue.h	/^QueueInsertFirst (Queue *q, Link *l)$/
QueueInsertLast	queue.h	/^QueueInsertLast (Queue *q, Link *l)$/
QueueLast	queue.h	/^QueueLast (Queue *q)$/
QueueLength	queue.h	/^QueueLength (Queue *q)$/
QueueLinkInit	queue.h	/^QueueLinkInit (Link *l, void *obj)$/
QueueModuleInit	queue.c	/^QueueModuleInit ()$/
QueueNext	queue.h	/^QueueNext (Link *l)$/
QueuePrev	queue.h	/^QueuePrev (Link *l)$/
QueueRemove	queue.h	/^QueueRemove (Link *l)$/
Read	filesys.h	/^  int	(*Read)(int, char *, int);$/
RestoreIntrs	dlxos.h	/^RestoreIntrs (int intrs)$/
SIZE_ARG_BUFF	process.h	60
SRCS	Makefile	/^SRCS = filesys.c memory.c misc.c process.c queue.c/
Seek	filesys.h	/^  int	(*Seek)(int, int, int);$/
Sem	synch.h	21
Sem	synch.h	26
Sem	synch.working.h	19
Sem	synch.working.h	22
SemCreate	synch.c	/^SemCreate(int count)$/
SemHandleSignal	synch.c	/^int SemHandleSignal(sem_t sem)$/
SemHandleWait	synch.c	/^int SemHandleWait(sem_t sem)$/
SemInit	synch.c	/^SemInit (Sem *sem, int count)$/
SemSignal	synch.c	/^SemSignal (Sem *sem)$/
SemWait	synch.c	/^SemWait (Sem *sem)$/
Stack	res	1
SynchModuleInit	synch.c	/^SynchModuleInit()$/
SysprocCreateProcesses	sysproc.c	/^SysprocCreateProcesses ()$/
TOP_VIRTUAL_ADDRESS_SPACE	memory.h	31
TRAP_ACCESS	traps.h	18
TRAP_ADDRESS	traps.h	17
TRAP_CLOSE	traps.h	40
TRAP_CONTEXT_SWITCH	traps.h	46
TRAP_DELETE	traps.h	41
TRAP_DIV0	traps.h	20
TRAP_EXIT	traps.h	42
TRAP_FORMAT	traps.h	22
TRAP_ILLEGALINST	traps.h	16
TRAP_KBD	traps.h	26
TRAP_LSEEK	traps.h	37
TRAP_OPEN	traps.h	39
TRAP_OVERFLOW	traps.h	19
TRAP_PAGEFAULT	traps.h	23
TRAP_PRINTF	traps.h	34
TRAP_PRIVILEGE	traps.h	21
TRAP_PROCESS_CREATE	traps.h	53
TRAP_PROCESS_FORK	traps.h	51
TRAP_PROCESS_GETPID	traps.h	52
TRAP_PROCESS_SLEEP	traps.h	49
TRAP_PROCESS_WAKEUP	traps.h	50
TRAP_READ	traps.h	35
TRAP_SEEK	traps.h	38
TRAP_SEM_CREATE	traps.h	54
TRAP_SEM_SIGNAL	traps.h	56
TRAP_SEM_WAIT	traps.h	55
TRAP_STACK_SIZE	traps.h	66
TRAP_TIMER	traps.h	25
TRAP_TLBFAULT	traps.h	24
TRAP_TRAP_INSTR	traps.h	29
TRAP_WRITE	traps.h	36
TimerSet	traps.c	/^TimerSet (int us)$/
TrapPrintfHandler	traps.c	/^TrapPrintfHandler (uint32 *trapArgs, int sysMode)$/
TrapProcessCreateHandler	traps.c	/^static void TrapProcessCreateHandler(uint32 *trapA/
Unix	filesys.h	59
VoidFunc	process.h	31
Write	filesys.h	/^  int	(*Write)(int, char *, int);$/
_Close	usertraps.s	/^_Close:		$/
_CondBroadcast	synch.working.s	/^_CondBroadcast:$/
_CondInit	synch.working.s	/^_CondInit:$/
_CondSignal	synch.working.s	/^_CondSignal:$/
_CondWait	synch.working.s	/^_CondWait:$/
_CurrentIntrs	dlxos.s	/^_CurrentIntrs:$/
_LAB4_H_	lab3.h	3
_LockAcquire	synch.working.s	/^_LockAcquire:$/
_LockInit	synch.working.s	/^_LockInit:$/
_LockRelease	synch.working.s	/^_LockRelease:$/
_Lseek	usertraps.s	/^_Lseek:		$/
_Open	usertraps.s	/^_Open:		$/
_Printf	usertraps.s	/^_Printf:		$/
_ProcessSleep	dlxos.s	/^_ProcessSleep:	$/
_Putchar	usertraps.s	/^_Putchar:		$/
_QueueEmpty	synch.working.s	/^_QueueEmpty:$/
_QueueFirst	synch.working.s	/^_QueueFirst:$/
_QueueInsertAfter	synch.working.s	/^_QueueInsertAfter:$/
_QueueInsertFirst	synch.working.s	/^_QueueInsertFirst:$/
_QueueInsertLast	synch.working.s	/^_QueueInsertLast:$/
_QueueLast	synch.working.s	/^_QueueLast:$/
_QueueLength	synch.working.s	/^_QueueLength:$/
_QueueLinkInit	synch.working.s	/^_QueueLinkInit:$/
_QueueNext	synch.working.s	/^_QueueNext:$/
_QueuePrev	synch.working.s	/^_QueuePrev:$/
_QueueRemove	synch.working.s	/^_QueueRemove:$/
_Read	usertraps.s	/^_Read:		$/
_SemInit	synch.working.s	/^_SemInit:$/
_SemSignal	synch.working.s	/^_SemSignal:$/
_SemWait	synch.working.s	/^_SemWait:$/
_SetIntrs	dlxos.s	/^_SetIntrs:$/
_Write	usertraps.s	/^_Write:		$/
_dlx_h_	dlx.h	6
_dlxos_h_	dlxos.h	6
_dlxtraps_h_	traps.h	14
_filesys_h_	filesys.h	14
_getpid	usertraps.s	/^_getpid:$/
_intrhandler	dlxos.s	/^_intrhandler:$/
_intrreturn	dlxos.s	/^_intrreturn:$/
_isspace	synch.working.s	/^_isspace:$/
_isxdigit	synch.working.s	/^_isxdigit:$/
_lastosaddress	osend.s	/^_lastosaddress:$/
_memory_h_	memory.h	10
_misc_h_	misc.h	6
_osinit	dlxos.s	/^_osinit:$/
_process_create	usertraps.s	/^_process_create:$/
_process_h_	process.h	10
_queue_h_	queue.h	11
_random	trap_random.s	/^_random:		$/
_sem_create	usertraps.s	/^_sem_create:$/
_sem_signal	usertraps.s	/^_sem_signal:$/
_sem_wait	usertraps.s	/^_sem_wait:$/
_srandom	trap_random.s	/^_srandom:		$/
_synch_h_	synch.h	11
_synch_h_	synch.working.h	15
_syscall_h_	syscall.h	9
all	Makefile	/^all: os.dlx.obj  userprog userprog1 userprog2$/
bcopy	misc.c	/^bcopy (char *src, char *dst, int count)$/
buffer	filesys.h	57
bzero	misc.c	/^bzero (char *dst, int count)$/
chaseTail	sysproc.c	/^chaseTail (int me)$/
clean	Makefile	/^clean:$/
condLock	synch.working.h	35
condSem	synch.working.h	36
count	synch.h	23
count	synch.working.h	21
curpos	filesys.h	51
currentPCB	process.c	20
currentSavedFrame	process.h	35
dbprintf	dlxos.h	/^#define	dbprintf(flag, format, args...) 		\\$/
debug	dlxsim.cc	24
debugstr	process.c	48
depend	Makefile	/^depend: $(SRCS) $(INCS)$/
dindex	misc.c	/^dindex (const char *s, int c)$/
ditoa	misc.c	/^ditoa (int n, char *buf)$/
dlxos.o	Makefile	/^dlxos.o: dlxos.s$/
dmindex	misc.c	/^dmindex (const char *s, const char *match)$/
doSomething	sysproc.c	/^doSomething (int me)$/
dointerrupt	traps.c	/^dointerrupt (unsigned int cause, unsigned int iar,/
dstrcat	misc.c	/^dstrcat (char *onto, const char *addn)$/
dstrcpy	misc.c	/^dstrcpy (char *to, const char *from)$/
dstrlen	misc.c	/^dstrlen (const char *s)$/
dstrncmp	misc.c	/^dstrncmp (const char *s1, const char *s2, int n)$/
dstrncpy	misc.c	/^dstrncpy (char *to, const char *from, int n)$/
dstrstr	misc.c	/^dstrstr (const char *buf, const char *pattern)$/
dstrtol	misc.c	/^dstrtol (char *c,  char **newpos, int base)$/
emptyLoop	sysproc.c	/^emptyLoop (int me)$/
fd	filesys.h	47
findpid	process.c	/^unsigned findpid(PCB *pcb)$/
first	queue.h	27
flags	filesys.h	56
flags	process.h	38
freeLinks	queue.c	11
freemapmax	memory.c	14
freepages	memory.c	16
freepcbs	process.c	23
fs	filesys.c	17
fs	filesys.h	55
get_argument	process.c	/^uint32 get_argument(char *string)$/
getxvalue	dlxsim.cc	/^getxvalue (int x)$/
getxvalue	process.c	/^getxvalue (int x)$/
intrSaveReg	dlxos.s	/^intrSaveReg:$/
intrSystem	dlxos.s	/^intrSystem:$/
inuse	synch.h	24
invert	memory.c	/^invert (uint32 n)$/
isspace	misc.h	/^isspace (char c)$/
isxdigit	misc.h	/^isxdigit (char c)$/
l	process.h	42
last	queue.h	28
linkpool	queue.c	12
moveBetweenSpaces	memory.c	/^moveBetweenSpaces (PCB *pcb, unsigned char *s, uns/
mutex	synch.working.h	29
mysems	sysproc.c	18
name	process.h	39
negativeone	memory.c	17
next	queue.h	20
nfreepages	memory.c	15
nitems	queue.h	29
npages	process.h	41
npri	synch.working.h	31
nwaiters	synch.working.h	37
object	queue.h	23
openfiles	filesys.c	20
os.dlx	Makefile	/^os.dlx: $(OBJS) dlxos.o trap_random.o osend.o$/
os.dlx.obj	Makefile	/^os.dlx.obj: os.dlx$/
osend.o	Makefile	/^osend.o: osend.s$/
pagestart	memory.c	13
pagetable	process.h	40
pcbs	process.c	40
prev	queue.h	21
pri	synch.working.h	30
processQuantum	process.c	45
process_create	process.c	/^void process_create(char *name, ...)$/
queue	queue.h	22
randomStuff	sysproc.c	/^randomStuff (int seed)$/
rcsid	dlxsim.cc	13
rcsid	filesys.c	9
rcsid	memory.c	6
rcsid	traps.c	7
runQueue	process.c	27
sem_t	lab3.h	9
sem_t	synch.h	17
sems	synch.c	12
sysStackArea	process.h	37
sysStackPtr	process.h	36
trap_random.o	Makefile	/^trap_random.o: trap_random.s$/
u	filesys.h	61
uint32	dlxos.h	10
uint32	lab3.h	8
userprog	Makefile	/^userprog: userprog.o usertraps.o misc.o$/
userprog1	Makefile	/^userprog1: userprog1.o usertraps.o misc.o$/
userprog2	Makefile	/^userprog2: userprog2.o usertraps.o misc.o$/
usertraps.o	Makefile	/^usertraps.o: usertraps.s$/
waitQueue	process.c	32
waiting	synch.h	22
waiting	synch.working.h	20
zombieQueue	process.c	36
