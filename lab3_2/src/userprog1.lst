 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 20480
    3                      ; Data size: 24
    4                      ; Text size: 2872
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x2000
    8                      ; Compiled by GCC
   10  00002000          	.align 2
   11  00002000          	LC0_LF0:
   12  00002000  496e2055	.ascii "In Userprog1, Sum : %d\n\000"
   12  00002004  73657270	
   12  00002008  726f6731	
   12  0000200c  2c205375	
   12  00002010  6d203a20	
   12  00002014  25640a00	
   13  00002018          	.text
   14  00001000          	.align 2
   15  00001000          	.proc _main
   16  00001000          	.global _main
   17  00001000          	_main:
   18                      ;  Function 'main'; 0 bytes of locals, 0 regs to save.
   19  00001000  afbefffc	sw	-4(r29),r30; push fp
   20  00001004  001df020	add	r30,r0,r29; fp = sp
   21  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   22  0000100c  2fbd0008	subui	r29,r29,#8; alloc local storage
   23  00001010  0c000b1c	jal	___main
   24  00001014  54000000	nop; not filled.
   25  00001018  20030000	addi	r3,r0,(#0x0)&0xff
   26  0000101c  3c040010	lhi	r4,#16
   27  00001020  24840000	addui	r4,r4,#0
   28  00001024  201f0000	addi	r31,r0,#0
   29  00001028  00041020	add	r2,r0,r4
   30  0000102c          	L16_LF0:
   31  0000102c  a05f0000	sb	(r2),r31
   32  00001030  20422004	addi	r2,r2,#8196
   33  00001034  23ff0001	addi	r31,r31,#1
   34  00001038  73e1000b	slei	r1,r31,#11
   35  0000103c  1420ffec	bnez	r1,L16_LF0
   36  00001040  54000000	nop; not filled.
   37  00001044  0004f820	add	r31,r0,r4
   38  00001048  3c050001	lhi	r5,#1
   39  0000104c  24a5602c	addui	r5,r5,#24620
   40  00001050  03e51025	or	r2,r31,r5
   41  00001054          	L21_LF0:
   42  00001054  83e50000	lb	r5,(r31)
   43  00001058  00a31820	add	r3,r5,r3
   44  0000105c  23ff2004	addi	r31,r31,#8196
   45  00001060  03e2082c	sle	r1,r31,r2
   46  00001064  1420ffec	bnez	r1,L21_LF0
   47  00001068  54000000	nop; not filled.
   48  0000106c  23bdfff8	addi	r29,r29,#-8
   49  00001070  3c050000	lhi	r5,((LC0_LF0)>>16)&0xffff
   50  00001074  24a52000	addui	r5,r5,(LC0_LF0)&0xffff
   51  00001078  afa50000	sw	(r29),r5
   52  0000107c  306100ff	andi	r1,r3,#0x00ff
   53  00001080  afa10004	sw	4(r29),r1
   54  00001084  0c000058	jal	_Printf
   55  00001088  54000000	nop; not filled.
   56  0000108c  23bd0008	addi	r29,r29,#8
   57  00001090  0c000a90	jal	_exit
   58  00001094  54000000	nop
   59  00001098          	.endproc _main
   60                      ;;;
   61                      ;;; Stub functions for DLX traps.
   62                      ;;;
   63                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
   64                      ;;;
   65                      ;;; The traps such as Open and Close
   66                      ;;; (note the capital letters) are for use by user programs.  The traps
   67                      ;;; with names such as open and close (lower case) are for use by the OS.
   68                      ;;;
   71  00001098          	.align 2
   73                      ;;; The following are the traps to be used by user-level programs
   74                      ;;;
   76  00001098          	.align 2
   77  00001098          	.proc _Open
   78  00001098          	.global _Open
   79  00001098          	_Open:
   80                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
   81                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
   82                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
   83  00001098  44000213	trap	#0x213
   84  0000109c  4be00000	jr	r31
   85  000010a0  54000000	nop
   86  000010a4          	.endproc _Open
   88  000010a4          	.proc _Close
   89  000010a4          	.global _Close
   90  000010a4          	_Close:
   91  000010a4  44000214	trap	#0x214
   92  000010a8  4be00000	jr	r31
   93  000010ac  54000000	nop
   94  000010b0          	.endproc _Close
   96  000010b0          	.proc _Read
   97  000010b0          	.global _Read
   98  000010b0          	_Read:
   99  000010b0  44000210	trap	#0x210
  100  000010b4  4be00000	jr	r31
  101  000010b8  54000000	nop
  102  000010bc          	.endproc _Read
  104  000010bc          	.proc _Write
  105  000010bc          	.global _Write
  106  000010bc          	_Write:
  107  000010bc  44000211	trap	#0x211
  108  000010c0  4be00000	jr	r31
  109  000010c4  54000000	nop
  110  000010c8          	.endproc _Write
  112  000010c8          	.proc _Lseek
  113  000010c8          	.global _Lseek
  114  000010c8          	_Lseek:
  115  000010c8  44000212	trap	#0x212
  116  000010cc  4be00000	jr	r31
  117  000010d0  54000000	nop
  118  000010d4          	.endproc _Lseek
  120  000010d4          	.proc _Putchar
  121  000010d4          	.global _Putchar
  122  000010d4          	_Putchar:
  123  000010d4  44000280	trap	#0x280
  124  000010d8  4be00000	jr	r31
  125  000010dc  54000000	nop
  126  000010e0          	.endproc _Putchar
  128  000010e0          	.proc _Printf
  129  000010e0          	.global _Printf
  130  000010e0          	_Printf:
  131  000010e0  44000201	trap	#0x201
  132  000010e4  4be00000	jr	r31
  133  000010e8  54000000	nop
  134  000010ec          	.endproc _Printf
  136  000010ec          	.proc _getpid
  137  000010ec          	.global _getpid
  138  000010ec          	_getpid:
  139  000010ec  44000431	trap	#0x431
  140  000010f0  4be00000	jr	r31
  141  000010f4  54000000	nop
  142  000010f8          	.endproc _getpid
  144  000010f8          	.proc _process_create
  145  000010f8          	.global _process_create
  146  000010f8          	_process_create:
  147  000010f8  44000432	trap	#0x432
  148  000010fc  4be00000	jr	r31
  149  00001100  54000000	nop
  150  00001104          	.endproc _process_create
  153  00001104          	.proc _sem_create
  154  00001104          	.global _sem_create
  155  00001104          	_sem_create:
  156  00001104  44000450	trap	#0x450
  157  00001108  4be00000	jr	r31
  158  0000110c  54000000	nop
  159  00001110          	.endproc _sem_create
  161  00001110          	.proc _sem_wait
  162  00001110          	.global _sem_wait
  163  00001110          	_sem_wait:
  164  00001110  44000451	trap	#0x451
  165  00001114  4be00000	jr	r31
  166  00001118  54000000	nop
  167  0000111c          	.endproc _sem_wait
  169  0000111c          	.proc _sem_signal
  170  0000111c          	.global _sem_signal
  171  0000111c          	_sem_signal:
  172  0000111c  44000452	trap	#0x452
  173  00001120  4be00000	jr	r31
  174  00001124  54000000	nop
  175  00001128          	.endproc _sem_signal
  178                      ; Compiled by GCC
  180  00001128          	.align 2
  181  00001128          	.proc _isspace
  182  00001128          	.global _isspace
  183  00001128          	_isspace:
  184                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
  185  00001128  afbefffc	sw	-4(r29),r30; push fp
  186  0000112c  001df020	add	r30,r0,r29; fp = sp
  187  00001130  afbffff8	sw	-8(r29),r31; push ret addr
  188  00001134  2fbd0010	subui	r29,r29,#16; alloc local storage
  189  00001138  afa20000	sw	0(r29),r2
  190  0000113c  83c20003	lb	r2,3(r30)
  191  00001140  201f0000	addi	r31,r0,#0
  192  00001144  304100ff	andi	r1,r2,#0x00ff
  193  00001148  60210020	seqi	r1,r1,#32
  194  0000114c  14200018	bnez	r1,L6_LF2
  195  00001150  54000000	nop; not filled.
  196  00001154  2041fff7	addi	r1,r2,#-9
  197  00001158  302100ff	andi	r1,r1,#0x00ff
  198  0000115c  70210001	sleui	r1,r1,#1
  199  00001160  10200008	beqz	r1,L5_LF2
  200  00001164  54000000	nop; not filled.
  201  00001168          	L6_LF2:
  202  00001168  201f0001	addi	r31,r0,#1
  203  0000116c          	L5_LF2:
  204  0000116c  001f0820	add	r1,r0,r31
  205  00001170  8fa20000	lw	r2,0(r29)
  206  00001174  8fdffff8	lw	r31,-8(r30)
  207  00001178  001ee820	add	r29,r0,r30
  208  0000117c  8fdefffc	lw	r30,-4(r30)
  209  00001180  4be00000	jr	r31
  210  00001184  54000000	nop
  211  00001188          	.endproc _isspace
  212  00001188          	.align 2
  213  00001188          	.proc _isxdigit
  214  00001188          	.global _isxdigit
  215  00001188          	_isxdigit:
  216                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
  217  00001188  afbefffc	sw	-4(r29),r30; push fp
  218  0000118c  001df020	add	r30,r0,r29; fp = sp
  219  00001190  afbffff8	sw	-8(r29),r31; push ret addr
  220  00001194  2fbd0010	subui	r29,r29,#16; alloc local storage
  221  00001198  afa20000	sw	0(r29),r2
  222  0000119c  83df0003	lb	r31,3(r30)
  223  000011a0  20020000	addi	r2,r0,#0
  224  000011a4  23e1ffd0	addi	r1,r31,#-48
  225  000011a8  302100ff	andi	r1,r1,#0x00ff
  226  000011ac  70210009	sleui	r1,r1,#9
  227  000011b0  14200028	bnez	r1,L12_LF2
  228  000011b4  54000000	nop; not filled.
  229  000011b8  23e1ff9f	addi	r1,r31,#-97
  230  000011bc  302100ff	andi	r1,r1,#0x00ff
  231  000011c0  70210005	sleui	r1,r1,#5
  232  000011c4  14200014	bnez	r1,L12_LF2
  233  000011c8  54000000	nop; not filled.
  234  000011cc  33e100ff	andi	r1,r31,#0x00ff
  235  000011d0  64210041	snei	r1,r1,#65
  236  000011d4  14200008	bnez	r1,L11_LF2
  237  000011d8  54000000	nop; not filled.
  238  000011dc          	L12_LF2:
  239  000011dc  20020001	addi	r2,r0,#1
  240  000011e0          	L11_LF2:
  241  000011e0  00020820	add	r1,r0,r2
  242  000011e4  8fa20000	lw	r2,0(r29)
  243  000011e8  8fdffff8	lw	r31,-8(r30)
  244  000011ec  001ee820	add	r29,r0,r30
  245  000011f0  8fdefffc	lw	r30,-4(r30)
  246  000011f4  4be00000	jr	r31
  247  000011f8  54000000	nop
  248  000011fc          	.endproc _isxdigit
  249  000011fc          	.align 2
  250  000011fc          	.proc _dstrcpy
  251  000011fc          	.global _dstrcpy
  252  000011fc          	_dstrcpy:
  253                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
  254  000011fc  afbefffc	sw	-4(r29),r30; push fp
  255  00001200  001df020	add	r30,r0,r29; fp = sp
  256  00001204  afbffff8	sw	-8(r29),r31; push ret addr
  257  00001208  2fbd0010	subui	r29,r29,#16; alloc local storage
  258  0000120c  afa20000	sw	0(r29),r2
  259  00001210  afa30004	sw	4(r29),r3
  260  00001214  8fdf0000	lw	r31,(r30)
  261  00001218  8fc20004	lw	r2,4(r30)
  262  0000121c  001f1820	add	r3,r0,r31
  263  00001220          	L19_LF2:
  264  00001220  80410000	lb	r1,(r2)
  265  00001224  a3e10000	sb	(r31),r1
  266  00001228  20420001	addi	r2,r2,#1
  267  0000122c  23ff0001	addi	r31,r31,#1
  268  00001230  302100ff	andi	r1,r1,#0x00ff
  269  00001234  64210000	snei	r1,r1,#0
  270  00001238  1420ffe4	bnez	r1,L19_LF2
  271  0000123c  54000000	nop; not filled.
  272  00001240  00030820	add	r1,r0,r3
  273  00001244  8fa20000	lw	r2,0(r29)
  274  00001248  8fa30004	lw	r3,4(r29)
  275  0000124c  8fdffff8	lw	r31,-8(r30)
  276  00001250  001ee820	add	r29,r0,r30
  277  00001254  8fdefffc	lw	r30,-4(r30)
  278  00001258  4be00000	jr	r31
  279  0000125c  54000000	nop
  280  00001260          	.endproc _dstrcpy
  281  00001260          	.align 2
  282  00001260          	.proc _dstrncpy
  283  00001260          	.global _dstrncpy
  284  00001260          	_dstrncpy:
  285                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
  286  00001260  afbefffc	sw	-4(r29),r30; push fp
  287  00001264  001df020	add	r30,r0,r29; fp = sp
  288  00001268  afbffff8	sw	-8(r29),r31; push ret addr
  289  0000126c  2fbd0018	subui	r29,r29,#24; alloc local storage
  290  00001270  afa20000	sw	0(r29),r2
  291  00001274  afa30004	sw	4(r29),r3
  292  00001278  afa40008	sw	8(r29),r4
  293  0000127c  8fc20000	lw	r2,(r30)
  294  00001280  8fc30004	lw	r3,4(r30)
  295  00001284  8fdf0008	lw	r31,8(r30)
  296  00001288  00022020	add	r4,r0,r2
  297  0000128c  08000024	j	L37_LF2
  298  00001290  54000000	nop; not filled.
  299  00001294          	L34_LF2:
  300  00001294  80610000	lb	r1,(r3)
  301  00001298  a0410000	sb	(r2),r1
  302  0000129c  20630001	addi	r3,r3,#1
  303  000012a0  20420001	addi	r2,r2,#1
  304  000012a4  302100ff	andi	r1,r1,#0x00ff
  305  000012a8  64210000	snei	r1,r1,#0
  306  000012ac  10200018	beqz	r1,L32_LF2
  307  000012b0  54000000	nop; not filled.
  308  000012b4          	L37_LF2:
  309  000012b4  001f0820	add	r1,r0,r31
  310  000012b8  23ffffff	addi	r31,r31,#-1
  311  000012bc  70210000	slei	r1,r1,#0
  312  000012c0  1020ffd0	beqz	r1,L34_LF2
  313  000012c4  54000000	nop; not filled.
  314  000012c8          	L32_LF2:
  315  000012c8  00040820	add	r1,r0,r4
  316  000012cc  8fa20000	lw	r2,0(r29)
  317  000012d0  8fa30004	lw	r3,4(r29)
  318  000012d4  8fa40008	lw	r4,8(r29)
  319  000012d8  8fdffff8	lw	r31,-8(r30)
  320  000012dc  001ee820	add	r29,r0,r30
  321  000012e0  8fdefffc	lw	r30,-4(r30)
  322  000012e4  4be00000	jr	r31
  323  000012e8  54000000	nop
  324  000012ec          	.endproc _dstrncpy
  325  000012ec          	.align 2
  326  000012ec          	.proc _dstrcat
  327  000012ec          	.global _dstrcat
  328  000012ec          	_dstrcat:
  329                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
  330  000012ec  afbefffc	sw	-4(r29),r30; push fp
  331  000012f0  001df020	add	r30,r0,r29; fp = sp
  332  000012f4  afbffff8	sw	-8(r29),r31; push ret addr
  333  000012f8  2fbd0010	subui	r29,r29,#16; alloc local storage
  334  000012fc  afa20000	sw	0(r29),r2
  335  00001300  afa30004	sw	4(r29),r3
  336  00001304  8fdf0000	lw	r31,(r30)
  337  00001308  001f1820	add	r3,r0,r31
  338  0000130c  90610000	lbu	r1,(r3)
  339  00001310  64210000	snei	r1,r1,#0
  340  00001314  10200018	beqz	r1,L50_LF2
  341  00001318  54000000	nop; not filled.
  342  0000131c          	L51_LF2:
  343  0000131c  23ff0001	addi	r31,r31,#1
  344  00001320  93e10000	lbu	r1,(r31)
  345  00001324  64210000	snei	r1,r1,#0
  346  00001328  1420fff0	bnez	r1,L51_LF2
  347  0000132c  54000000	nop; not filled.
  348  00001330          	L50_LF2:
  349  00001330  001f1020	add	r2,r0,r31
  350  00001334  8fdf0004	lw	r31,4(r30)
  351  00001338          	L54_LF2:
  352  00001338  83e10000	lb	r1,(r31)
  353  0000133c  a0410000	sb	(r2),r1
  354  00001340  23ff0001	addi	r31,r31,#1
  355  00001344  20420001	addi	r2,r2,#1
  356  00001348  302100ff	andi	r1,r1,#0x00ff
  357  0000134c  64210000	snei	r1,r1,#0
  358  00001350  1420ffe4	bnez	r1,L54_LF2
  359  00001354  54000000	nop; not filled.
  360  00001358  00030820	add	r1,r0,r3
  361  0000135c  8fa20000	lw	r2,0(r29)
  362  00001360  8fa30004	lw	r3,4(r29)
  363  00001364  8fdffff8	lw	r31,-8(r30)
  364  00001368  001ee820	add	r29,r0,r30
  365  0000136c  8fdefffc	lw	r30,-4(r30)
  366  00001370  4be00000	jr	r31
  367  00001374  54000000	nop
  368  00001378          	.endproc _dstrcat
  369  00001378          	.align 2
  370  00001378          	.proc _dstrncmp
  371  00001378          	.global _dstrncmp
  372  00001378          	_dstrncmp:
  373                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
  374  00001378  afbefffc	sw	-4(r29),r30; push fp
  375  0000137c  001df020	add	r30,r0,r29; fp = sp
  376  00001380  afbffff8	sw	-8(r29),r31; push ret addr
  377  00001384  2fbd0018	subui	r29,r29,#24; alloc local storage
  378  00001388  afa20000	sw	0(r29),r2
  379  0000138c  afa30004	sw	4(r29),r3
  380  00001390  afa40008	sw	8(r29),r4
  381  00001394  afa5000c	sw	12(r29),r5
  382  00001398  8fc30000	lw	r3,(r30)
  383  0000139c  8fc40004	lw	r4,4(r30)
  384  000013a0  8fc50008	lw	r5,8(r30)
  385  000013a4  20020000	addi	r2,r0,#0
  386  000013a8  0045082a	slt	r1,r2,r5
  387  000013ac  1020003c	beqz	r1,L73_LF2
  388  000013b0  54000000	nop; not filled.
  389  000013b4          	L75_LF2:
  390  000013b4  909f0000	lbu	r31,(r4)
  391  000013b8  67e10000	snei	r1,r31,#0
  392  000013bc  10200038	beqz	r1,L86_LF2
  393  000013c0  54000000	nop; not filled.
  394  000013c4  90610000	lbu	r1,(r3)
  395  000013c8  003f0829	sne	r1,r1,r31
  396  000013cc  1420001c	bnez	r1,L73_LF2
  397  000013d0  54000000	nop; not filled.
  398  000013d4  20630001	addi	r3,r3,#1
  399  000013d8  20840001	addi	r4,r4,#1
  400  000013dc  20420001	addi	r2,r2,#1
  401  000013e0  0045082a	slt	r1,r2,r5
  402  000013e4  1420ffcc	bnez	r1,L75_LF2
  403  000013e8  54000000	nop; not filled.
  404  000013ec          	L73_LF2:
  405  000013ec  00450828	seq	r1,r2,r5
  406  000013f0  10200010	beqz	r1,L80_LF2
  407  000013f4  54000000	nop; not filled.
  408  000013f8          	L86_LF2:
  409  000013f8  20010000	addi	r1,r0,#0
  410  000013fc  08000028	j	L84_LF2
  411  00001400  54000000	nop; not filled.
  412  00001404          	L80_LF2:
  413  00001404  907f0000	lbu	r31,(r3)
  414  00001408  90830000	lbu	r3,(r4)
  415  0000140c  03e30822	sub	r1,r31,r3
  416  00001410  74210000	sgei	r1,r1,#0
  417  00001414  2002ffff	addi	r2,r0,#-1
  418  00001418  10200008	beqz	r1,L82_LF2
  419  0000141c  54000000	nop; not filled.
  420  00001420  03e31029	sne	r2,r31,r3
  421  00001424          	L82_LF2:
  422  00001424  00020820	add	r1,r0,r2
  423  00001428          	L84_LF2:
  424  00001428  8fa20000	lw	r2,0(r29)
  425  0000142c  8fa30004	lw	r3,4(r29)
  426  00001430  8fa40008	lw	r4,8(r29)
  427  00001434  8fa5000c	lw	r5,12(r29)
  428  00001438  8fdffff8	lw	r31,-8(r30)
  429  0000143c  001ee820	add	r29,r0,r30
  430  00001440  8fdefffc	lw	r30,-4(r30)
  431  00001444  4be00000	jr	r31
  432  00001448  54000000	nop
  433  0000144c          	.endproc _dstrncmp
  434  0000144c          	.align 2
  435  0000144c          	.proc _dstrlen
  436  0000144c          	.global _dstrlen
  437  0000144c          	_dstrlen:
  438                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
  439  0000144c  afbefffc	sw	-4(r29),r30; push fp
  440  00001450  001df020	add	r30,r0,r29; fp = sp
  441  00001454  afbffff8	sw	-8(r29),r31; push ret addr
  442  00001458  2fbd0010	subui	r29,r29,#16; alloc local storage
  443  0000145c  afa20000	sw	0(r29),r2
  444  00001460  8fdf0000	lw	r31,(r30)
  445  00001464  20020000	addi	r2,r0,#0
  446  00001468  08000008	j	L97_LF2
  447  0000146c  54000000	nop; not filled.
  448  00001470          	L95_LF2:
  449  00001470  20420001	addi	r2,r2,#1
  450  00001474          	L97_LF2:
  451  00001474  93e10000	lbu	r1,(r31)
  452  00001478  23ff0001	addi	r31,r31,#1
  453  0000147c  64210000	snei	r1,r1,#0
  454  00001480  1420ffec	bnez	r1,L95_LF2
  455  00001484  54000000	nop; not filled.
  456  00001488  00020820	add	r1,r0,r2
  457  0000148c  8fa20000	lw	r2,0(r29)
  458  00001490  8fdffff8	lw	r31,-8(r30)
  459  00001494  001ee820	add	r29,r0,r30
  460  00001498  8fdefffc	lw	r30,-4(r30)
  461  0000149c  4be00000	jr	r31
  462  000014a0  54000000	nop
  463  000014a4          	.endproc _dstrlen
  464  000014a4          	.align 2
  465  000014a4          	.proc _dstrstr
  466  000014a4          	.global _dstrstr
  467  000014a4          	_dstrstr:
  468                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
  469  000014a4  afbefffc	sw	-4(r29),r30; push fp
  470  000014a8  001df020	add	r30,r0,r29; fp = sp
  471  000014ac  afbffff8	sw	-8(r29),r31; push ret addr
  472  000014b0  2fbd0020	subui	r29,r29,#32; alloc local storage
  473  000014b4  afa20000	sw	0(r29),r2
  474  000014b8  afa30004	sw	4(r29),r3
  475  000014bc  afa40008	sw	8(r29),r4
  476  000014c0  afa5000c	sw	12(r29),r5
  477  000014c4  afa60010	sw	16(r29),r6
  478  000014c8  afa70014	sw	20(r29),r7
  479  000014cc  8fc50000	lw	r5,(r30)
  480  000014d0  8fc70004	lw	r7,4(r30)
  481  000014d4  20030000	addi	r3,r0,#0
  482  000014d8  90e10000	lbu	r1,(r7)
  483  000014dc  20e20001	addi	r2,r7,#1
  484  000014e0  64210000	snei	r1,r1,#0
  485  000014e4  1020001c	beqz	r1,L125_LF2
  486  000014e8  54000000	nop; not filled.
  487  000014ec          	L126_LF2:
  488  000014ec  20630001	addi	r3,r3,#1
  489  000014f0  90410000	lbu	r1,(r2)
  490  000014f4  20420001	addi	r2,r2,#1
  491  000014f8  64210000	snei	r1,r1,#0
  492  000014fc  1420ffec	bnez	r1,L126_LF2
  493  00001500  54000000	nop; not filled.
  494  00001504          	L125_LF2:
  495  00001504  00033020	add	r6,r0,r3
  496  00001508  080000ac	j	L149_LF2
  497  0000150c  54000000	nop; not filled.
  498  00001510          	L130_LF2:
  499  00001510  00051820	add	r3,r0,r5
  500  00001514  00072020	add	r4,r0,r7
  501  00001518  20020000	addi	r2,r0,#0
  502  0000151c  0046082a	slt	r1,r2,r6
  503  00001520  1020003c	beqz	r1,L134_LF2
  504  00001524  54000000	nop; not filled.
  505  00001528          	L136_LF2:
  506  00001528  909f0000	lbu	r31,(r4)
  507  0000152c  67e10000	snei	r1,r31,#0
  508  00001530  10200038	beqz	r1,L150_LF2
  509  00001534  54000000	nop; not filled.
  510  00001538  90610000	lbu	r1,(r3)
  511  0000153c  003f0829	sne	r1,r1,r31
  512  00001540  1420001c	bnez	r1,L134_LF2
  513  00001544  54000000	nop; not filled.
  514  00001548  20630001	addi	r3,r3,#1
  515  0000154c  20840001	addi	r4,r4,#1
  516  00001550  20420001	addi	r2,r2,#1
  517  00001554  0046082a	slt	r1,r2,r6
  518  00001558  1420ffcc	bnez	r1,L136_LF2
  519  0000155c  54000000	nop; not filled.
  520  00001560          	L134_LF2:
  521  00001560  00460828	seq	r1,r2,r6
  522  00001564  10200010	beqz	r1,L141_LF2
  523  00001568  54000000	nop; not filled.
  524  0000156c          	L150_LF2:
  525  0000156c  20010000	addi	r1,r0,#0
  526  00001570  08000028	j	L132_LF2
  527  00001574  54000000	nop; not filled.
  528  00001578          	L141_LF2:
  529  00001578  90630000	lbu	r3,(r3)
  530  0000157c  90820000	lbu	r2,(r4)
  531  00001580  00620822	sub	r1,r3,r2
  532  00001584  74210000	sgei	r1,r1,#0
  533  00001588  201fffff	addi	r31,r0,#-1
  534  0000158c  10200008	beqz	r1,L143_LF2
  535  00001590  54000000	nop; not filled.
  536  00001594  0062f829	sne	r31,r3,r2
  537  00001598          	L143_LF2:
  538  00001598  001f0820	add	r1,r0,r31
  539  0000159c          	L132_LF2:
  540  0000159c  64210000	snei	r1,r1,#0
  541  000015a0  14200010	bnez	r1,L131_LF2
  542  000015a4  54000000	nop; not filled.
  543  000015a8  00050820	add	r1,r0,r5
  544  000015ac  0800001c	j	L146_LF2
  545  000015b0  54000000	nop; not filled.
  546  000015b4          	L131_LF2:
  547  000015b4  20a50001	addi	r5,r5,#1
  548  000015b8          	L149_LF2:
  549  000015b8  90a10000	lbu	r1,(r5)
  550  000015bc  64210000	snei	r1,r1,#0
  551  000015c0  1420ff4c	bnez	r1,L130_LF2
  552  000015c4  54000000	nop; not filled.
  553  000015c8  20010000	addi	r1,r0,#0
  554  000015cc          	L146_LF2:
  555  000015cc  8fa20000	lw	r2,0(r29)
  556  000015d0  8fa30004	lw	r3,4(r29)
  557  000015d4  8fa40008	lw	r4,8(r29)
  558  000015d8  8fa5000c	lw	r5,12(r29)
  559  000015dc  8fa60010	lw	r6,16(r29)
  560  000015e0  8fa70014	lw	r7,20(r29)
  561  000015e4  8fdffff8	lw	r31,-8(r30)
  562  000015e8  001ee820	add	r29,r0,r30
  563  000015ec  8fdefffc	lw	r30,-4(r30)
  564  000015f0  4be00000	jr	r31
  565  000015f4  54000000	nop
  566  000015f8          	.endproc _dstrstr
  567  000015f8          	.align 2
  568  000015f8          	.proc _dmindex
  569  000015f8          	.global _dmindex
  570  000015f8          	_dmindex:
  571                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
  572  000015f8  afbefffc	sw	-4(r29),r30; push fp
  573  000015fc  001df020	add	r30,r0,r29; fp = sp
  574  00001600  afbffff8	sw	-8(r29),r31; push ret addr
  575  00001604  2fbd0020	subui	r29,r29,#32; alloc local storage
  576  00001608  afa20000	sw	0(r29),r2
  577  0000160c  afa30004	sw	4(r29),r3
  578  00001610  afa40008	sw	8(r29),r4
  579  00001614  afa5000c	sw	12(r29),r5
  580  00001618  afa60010	sw	16(r29),r6
  581  0000161c  8fc40000	lw	r4,(r30)
  582  00001620  8fc60004	lw	r6,4(r30)
  583  00001624  90810000	lbu	r1,(r4)
  584  00001628  64210000	snei	r1,r1,#0
  585  0000162c  10200060	beqz	r1,L164_LF2
  586  00001630  54000000	nop; not filled.
  587  00001634  00012820	add	r5,r0,r1
  588  00001638          	L165_LF2:
  589  00001638  00061020	add	r2,r0,r6
  590  0000163c  80df0000	lb	r31,(r6)
  591  00001640  33e100ff	andi	r1,r31,#0x00ff
  592  00001644  64210000	snei	r1,r1,#0
  593  00001648  1020003c	beqz	r1,L163_LF2
  594  0000164c  54000000	nop; not filled.
  595  00001650  90830000	lbu	r3,(r4)
  596  00001654          	L169_LF2:
  597  00001654  33e100ff	andi	r1,r31,#0x00ff
  598  00001658  00610828	seq	r1,r3,r1
  599  0000165c  10200010	beqz	r1,L168_LF2
  600  00001660  54000000	nop; not filled.
  601  00001664  00040820	add	r1,r0,r4
  602  00001668  08000028	j	L173_LF2
  603  0000166c  54000000	nop; not filled.
  604  00001670          	L168_LF2:
  605  00001670  20420001	addi	r2,r2,#1
  606  00001674  805f0000	lb	r31,(r2)
  607  00001678  33e100ff	andi	r1,r31,#0x00ff
  608  0000167c  64210000	snei	r1,r1,#0
  609  00001680  1420ffd0	bnez	r1,L169_LF2
  610  00001684  54000000	nop; not filled.
  611  00001688          	L163_LF2:
  612  00001688  14a0ffac	bnez	r5,L165_LF2
  613  0000168c  54000000	nop; not filled.
  614  00001690          	L164_LF2:
  615  00001690  20010000	addi	r1,r0,#0
  616  00001694          	L173_LF2:
  617  00001694  8fa20000	lw	r2,0(r29)
  618  00001698  8fa30004	lw	r3,4(r29)
  619  0000169c  8fa40008	lw	r4,8(r29)
  620  000016a0  8fa5000c	lw	r5,12(r29)
  621  000016a4  8fa60010	lw	r6,16(r29)
  622  000016a8  8fdffff8	lw	r31,-8(r30)
  623  000016ac  001ee820	add	r29,r0,r30
  624  000016b0  8fdefffc	lw	r30,-4(r30)
  625  000016b4  4be00000	jr	r31
  626  000016b8  54000000	nop
  627  000016bc          	.endproc _dmindex
  628  000016bc          	.align 2
  629  000016bc          	.proc _dindex
  630  000016bc          	.global _dindex
  631  000016bc          	_dindex:
  632                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
  633  000016bc  afbefffc	sw	-4(r29),r30; push fp
  634  000016c0  001df020	add	r30,r0,r29; fp = sp
  635  000016c4  afbffff8	sw	-8(r29),r31; push ret addr
  636  000016c8  2fbd0010	subui	r29,r29,#16; alloc local storage
  637  000016cc  afa20000	sw	0(r29),r2
  638  000016d0  afa30004	sw	4(r29),r3
  639  000016d4  8fc20000	lw	r2,(r30)
  640  000016d8  8fc30004	lw	r3,4(r30)
  641  000016dc  08000024	j	L187_LF2
  642  000016e0  54000000	nop; not filled.
  643  000016e4          	L183_LF2:
  644  000016e4  33e100ff	andi	r1,r31,#0x00ff
  645  000016e8  00230828	seq	r1,r1,r3
  646  000016ec  10200010	beqz	r1,L184_LF2
  647  000016f0  54000000	nop; not filled.
  648  000016f4  00020820	add	r1,r0,r2
  649  000016f8  08000020	j	L186_LF2
  650  000016fc  54000000	nop; not filled.
  651  00001700          	L184_LF2:
  652  00001700  20420001	addi	r2,r2,#1
  653  00001704          	L187_LF2:
  654  00001704  805f0000	lb	r31,(r2)
  655  00001708  33e100ff	andi	r1,r31,#0x00ff
  656  0000170c  64210000	snei	r1,r1,#0
  657  00001710  1420ffd0	bnez	r1,L183_LF2
  658  00001714  54000000	nop; not filled.
  659  00001718  20010000	addi	r1,r0,#0
  660  0000171c          	L186_LF2:
  661  0000171c  8fa20000	lw	r2,0(r29)
  662  00001720  8fa30004	lw	r3,4(r29)
  663  00001724  8fdffff8	lw	r31,-8(r30)
  664  00001728  001ee820	add	r29,r0,r30
  665  0000172c  8fdefffc	lw	r30,-4(r30)
  666  00001730  4be00000	jr	r31
  667  00001734  54000000	nop
  668  00001738          	.endproc _dindex
  669  00001738          	.align 2
  670  00001738          	.proc _ditoa
  671  00001738          	.global _ditoa
  672  00001738          	_ditoa:
  673                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
  674  00001738  afbefffc	sw	-4(r29),r30; push fp
  675  0000173c  001df020	add	r30,r0,r29; fp = sp
  676  00001740  afbffff8	sw	-8(r29),r31; push ret addr
  677  00001744  2fbd0020	subui	r29,r29,#32; alloc local storage
  678  00001748  afa20000	sw	0(r29),r2
  679  0000174c  afa30004	sw	4(r29),r3
  680  00001750  afa40008	sw	8(r29),r4
  681  00001754  afa5000c	sw	12(r29),r5
  682  00001758  afa60010	sw	16(r29),r6
  683  0000175c  8fc30000	lw	r3,(r30)
  684  00001760  8fc40004	lw	r4,4(r30)
  685  00001764  68610000	slti	r1,r3,#0
  686  00001768  10200010	beqz	r1,L203_LF2
  687  0000176c  54000000	nop; not filled.
  688  00001770  2006002d	addi	r6,r0,(#0x2d)&0xff
  689  00001774  08000014	j	L216_LF2
  690  00001778  54000000	nop; not filled.
  691  0000177c          	L203_LF2:
  692  0000177c  64610000	snei	r1,r3,#0
  693  00001780  14200018	bnez	r1,L205_LF2
  694  00001784  54000000	nop; not filled.
  695  00001788  20060030	addi	r6,r0,(#0x30)&0xff
  696  0000178c          	L216_LF2:
  697  0000178c  a0860000	sb	(r4),r6
  698  00001790  20840001	addi	r4,r4,#1
  699  00001794  0800007c	j	L204_LF2
  700  00001798  54000000	nop; not filled.
  701  0000179c          	L205_LF2:
  702  0000179c  201f0001	addi	r31,r0,#1
  703  000017a0  03e3082c	sle	r1,r31,r3
  704  000017a4  1020001c	beqz	r1,L208_LF2
  705  000017a8  54000000	nop; not filled.
  706  000017ac          	L209_LF2:
  707  000017ac  53e10002	slli	r1,r31,#0x2
  708  000017b0  003f0820	add	r1,r1,r31
  709  000017b4  503f0001	slli	r31,r1,#0x1
  710  000017b8  03e3082c	sle	r1,r31,r3
  711  000017bc  1420ffec	bnez	r1,L209_LF2
  712  000017c0  54000000	nop; not filled.
  713  000017c4          	L208_LF2:
  714  000017c4  2005000a	addi	r5,r0,#10
  715  000017c8          	L212_LF2:
  716  000017c8  03e00035	movi2fp	f0,r31
  717  000017cc  00a00835	movi2fp	f1,r5
  718  000017d0  0401000f	div	f0,f0,f1
  719  000017d4  0000f834	movfp2i	r31,f0
  720  000017d8  00600035	movi2fp	f0,r3
  721  000017dc  03e00835	movi2fp	f1,r31
  722  000017e0  0401000f	div	f0,f0,f1
  723  000017e4  00001034	movfp2i	r2,f0
  724  000017e8  20410030	addi	r1,r2,#48
  725  000017ec  a0810000	sb	(r4),r1
  726  000017f0  20840001	addi	r4,r4,#1
  727  000017f4  00400035	movi2fp	f0,r2
  728  000017f8  03e00835	movi2fp	f1,r31
  729  000017fc  0401000e	mult	f0,f0,f1
  730  00001800  00000834	movfp2i	r1,f0
  731  00001804  00611822	sub	r3,r3,r1
  732  00001808  6fe10001	sgti	r1,r31,#1
  733  0000180c  1420ffb8	bnez	r1,L212_LF2
  734  00001810  54000000	nop; not filled.
  735  00001814          	L204_LF2:
  736  00001814  20060000	addi	r6,r0,(#0x0)&0xff
  737  00001818  a0860000	sb	(r4),r6
  738  0000181c  8fa20000	lw	r2,0(r29)
  739  00001820  8fa30004	lw	r3,4(r29)
  740  00001824  8fa40008	lw	r4,8(r29)
  741  00001828  8fa5000c	lw	r5,12(r29)
  742  0000182c  8fa60010	lw	r6,16(r29)
  743  00001830  8fdffff8	lw	r31,-8(r30)
  744  00001834  001ee820	add	r29,r0,r30
  745  00001838  8fdefffc	lw	r30,-4(r30)
  746  0000183c  4be00000	jr	r31
  747  00001840  54000000	nop
  748  00001844          	.endproc _ditoa
  749  00001844          	.align 2
  750  00001844          	.proc _dstrtol
  751  00001844          	.global _dstrtol
  752  00001844          	_dstrtol:
  753                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
  754  00001844  afbefffc	sw	-4(r29),r30; push fp
  755  00001848  001df020	add	r30,r0,r29; fp = sp
  756  0000184c  afbffff8	sw	-8(r29),r31; push ret addr
  757  00001850  2fbd0020	subui	r29,r29,#32; alloc local storage
  758  00001854  afa20000	sw	0(r29),r2
  759  00001858  afa30004	sw	4(r29),r3
  760  0000185c  afa40008	sw	8(r29),r4
  761  00001860  afa5000c	sw	12(r29),r5
  762  00001864  afa60010	sw	16(r29),r6
  763  00001868  8fc20000	lw	r2,(r30)
  764  0000186c  8fc50004	lw	r5,4(r30)
  765  00001870  8fc40008	lw	r4,8(r30)
  766  00001874  20030000	addi	r3,r0,#0
  767  00001878  08000008	j	L247_LF2
  768  0000187c  54000000	nop; not filled.
  769  00001880          	L220_LF2:
  770  00001880  20420001	addi	r2,r2,#1
  771  00001884          	L247_LF2:
  772  00001884  805f0000	lb	r31,(r2)
  773  00001888  33e100ff	andi	r1,r31,#0x00ff
  774  0000188c  60210020	seqi	r1,r1,#32
  775  00001890  1420ffec	bnez	r1,L220_LF2
  776  00001894  54000000	nop; not filled.
  777  00001898  23e1fff7	addi	r1,r31,#-9
  778  0000189c  302100ff	andi	r1,r1,#0x00ff
  779  000018a0  70210001	sleui	r1,r1,#1
  780  000018a4  1420ffd8	bnez	r1,L220_LF2
  781  000018a8  54000000	nop; not filled.
  782  000018ac  64a10000	snei	r1,r5,#0
  783  000018b0  10200008	beqz	r1,L222_LF2
  784  000018b4  54000000	nop; not filled.
  785  000018b8  aca20000	sw	(r5),r2
  786  000018bc          	L222_LF2:
  787  000018bc  905f0000	lbu	r31,(r2)
  788  000018c0  67e10000	snei	r1,r31,#0
  789  000018c4  10200090	beqz	r1,L248_LF2
  790  000018c8  54000000	nop; not filled.
  791  000018cc  63e1002d	seqi	r1,r31,#45
  792  000018d0  10200014	beqz	r1,L224_LF2
  793  000018d4  54000000	nop; not filled.
  794  000018d8  2006ffff	addi	r6,r0,#-1
  795  000018dc  20420001	addi	r2,r2,#1
  796  000018e0  08000008	j	L225_LF2
  797  000018e4  54000000	nop; not filled.
  798  000018e8          	L224_LF2:
  799  000018e8  20060001	addi	r6,r0,#1
  800  000018ec          	L225_LF2:
  801  000018ec  64810000	snei	r1,r4,#0
  802  000018f0  14200054	bnez	r1,L226_LF2
  803  000018f4  54000000	nop; not filled.
  804  000018f8  90410000	lbu	r1,(r2)
  805  000018fc  60210030	seqi	r1,r1,#48
  806  00001900  10200040	beqz	r1,L227_LF2
  807  00001904  54000000	nop; not filled.
  808  00001908  20420001	addi	r2,r2,#1
  809  0000190c  905f0000	lbu	r31,(r2)
  810  00001910  63e10078	seqi	r1,r31,#120
  811  00001914  14200010	bnez	r1,L229_LF2
  812  00001918  54000000	nop; not filled.
  813  0000191c  63e10058	seqi	r1,r31,#88
  814  00001920  10200014	beqz	r1,L228_LF2
  815  00001924  54000000	nop; not filled.
  816  00001928          	L229_LF2:
  817  00001928  20040010	addi	r4,r0,#16
  818  0000192c  20420001	addi	r2,r2,#1
  819  00001930  08000014	j	L226_LF2
  820  00001934  54000000	nop; not filled.
  821  00001938          	L228_LF2:
  822  00001938  20040008	addi	r4,r0,#8
  823  0000193c  08000008	j	L226_LF2
  824  00001940  54000000	nop; not filled.
  825  00001944          	L227_LF2:
  826  00001944  2004000a	addi	r4,r0,#10
  827  00001948          	L226_LF2:
  828  00001948  2081ffff	addi	r1,r4,#-1
  829  0000194c  6c21000f	sgtui	r1,r1,#15
  830  00001950  10200010	beqz	r1,L233_LF2
  831  00001954  54000000	nop; not filled.
  832  00001958          	L248_LF2:
  833  00001958  00030820	add	r1,r0,r3
  834  0000195c  080000c4	j	L245_LF2
  835  00001960  54000000	nop; not filled.
  836  00001964          	L233_LF2:
  837  00001964  805f0000	lb	r31,(r2)
  838  00001968  23e1ffd0	addi	r1,r31,#-48
  839  0000196c  302100ff	andi	r1,r1,#0x00ff
  840  00001970  70210009	sleui	r1,r1,#9
  841  00001974  10200014	beqz	r1,L236_LF2
  842  00001978  54000000	nop; not filled.
  843  0000197c  33e100ff	andi	r1,r31,#0x00ff
  844  00001980  2021ffd0	addi	r1,r1,#-48
  845  00001984  08000050	j	L237_LF2
  846  00001988  54000000	nop; not filled.
  847  0000198c          	L236_LF2:
  848  0000198c  23e1ff9f	addi	r1,r31,#-97
  849  00001990  302100ff	andi	r1,r1,#0x00ff
  850  00001994  70210019	sleui	r1,r1,#25
  851  00001998  10200014	beqz	r1,L238_LF2
  852  0000199c  54000000	nop; not filled.
  853  000019a0  33e100ff	andi	r1,r31,#0x00ff
  854  000019a4  2021ffa9	addi	r1,r1,#-87
  855  000019a8  0800002c	j	L237_LF2
  856  000019ac  54000000	nop; not filled.
  857  000019b0          	L238_LF2:
  858  000019b0  23e1ffbf	addi	r1,r31,#-65
  859  000019b4  302100ff	andi	r1,r1,#0x00ff
  860  000019b8  70210019	sleui	r1,r1,#25
  861  000019bc  10200014	beqz	r1,L240_LF2
  862  000019c0  54000000	nop; not filled.
  863  000019c4  33e100ff	andi	r1,r31,#0x00ff
  864  000019c8  2021ffc9	addi	r1,r1,#-55
  865  000019cc  08000008	j	L237_LF2
  866  000019d0  54000000	nop; not filled.
  867  000019d4          	L240_LF2:
  868  000019d4  200103e8	addi	r1,r0,#1000
  869  000019d8          	L237_LF2:
  870  000019d8  0024f82a	slt	r31,r1,r4
  871  000019dc  13e00024	beqz	r31,L246_LF2
  872  000019e0  54000000	nop; not filled.
  873  000019e4  00600035	movi2fp	f0,r3
  874  000019e8  00800835	movi2fp	f1,r4
  875  000019ec  0401000e	mult	f0,f0,f1
  876  000019f0  00001834	movfp2i	r3,f0
  877  000019f4  00611820	add	r3,r3,r1
  878  000019f8  20420001	addi	r2,r2,#1
  879  000019fc  17e0ff64	bnez	r31,L233_LF2
  880  00001a00  54000000	nop; not filled.
  881  00001a04          	L246_LF2:
  882  00001a04  64a10000	snei	r1,r5,#0
  883  00001a08  10200008	beqz	r1,L244_LF2
  884  00001a0c  54000000	nop; not filled.
  885  00001a10  aca20000	sw	(r5),r2
  886  00001a14          	L244_LF2:
  887  00001a14  00600035	movi2fp	f0,r3
  888  00001a18  00c00835	movi2fp	f1,r6
  889  00001a1c  0401000e	mult	f0,f0,f1
  890  00001a20  00000834	movfp2i	r1,f0
  891  00001a24          	L245_LF2:
  892  00001a24  8fa20000	lw	r2,0(r29)
  893  00001a28  8fa30004	lw	r3,4(r29)
  894  00001a2c  8fa40008	lw	r4,8(r29)
  895  00001a30  8fa5000c	lw	r5,12(r29)
  896  00001a34  8fa60010	lw	r6,16(r29)
  897  00001a38  8fdffff8	lw	r31,-8(r30)
  898  00001a3c  001ee820	add	r29,r0,r30
  899  00001a40  8fdefffc	lw	r30,-4(r30)
  900  00001a44  4be00000	jr	r31
  901  00001a48  54000000	nop
  902  00001a4c          	.endproc _dstrtol
  903  00001a4c          	.align 2
  904  00001a4c          	.proc _bcopy
  905  00001a4c          	.global _bcopy
  906  00001a4c          	_bcopy:
  907                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
  908  00001a4c  afbefffc	sw	-4(r29),r30; push fp
  909  00001a50  001df020	add	r30,r0,r29; fp = sp
  910  00001a54  afbffff8	sw	-8(r29),r31; push ret addr
  911  00001a58  2fbd0018	subui	r29,r29,#24; alloc local storage
  912  00001a5c  afa20000	sw	0(r29),r2
  913  00001a60  afa30004	sw	4(r29),r3
  914  00001a64  afa40008	sw	8(r29),r4
  915  00001a68  8fc30000	lw	r3,(r30)
  916  00001a6c  8fc20004	lw	r2,4(r30)
  917  00001a70  8fdf0008	lw	r31,8(r30)
  918  00001a74  08000014	j	L259_LF2
  919  00001a78  54000000	nop; not filled.
  920  00001a7c          	L257_LF2:
  921  00001a7c  80640000	lb	r4,(r3)
  922  00001a80  a0440000	sb	(r2),r4
  923  00001a84  20630001	addi	r3,r3,#1
  924  00001a88  20420001	addi	r2,r2,#1
  925  00001a8c          	L259_LF2:
  926  00001a8c  001f0820	add	r1,r0,r31
  927  00001a90  23ffffff	addi	r31,r31,#-1
  928  00001a94  6c210000	sgti	r1,r1,#0
  929  00001a98  1420ffe0	bnez	r1,L257_LF2
  930  00001a9c  54000000	nop; not filled.
  931  00001aa0  8fa20000	lw	r2,0(r29)
  932  00001aa4  8fa30004	lw	r3,4(r29)
  933  00001aa8  8fa40008	lw	r4,8(r29)
  934  00001aac  8fdffff8	lw	r31,-8(r30)
  935  00001ab0  001ee820	add	r29,r0,r30
  936  00001ab4  8fdefffc	lw	r30,-4(r30)
  937  00001ab8  4be00000	jr	r31
  938  00001abc  54000000	nop
  939  00001ac0          	.endproc _bcopy
  940  00001ac0          	.align 2
  941  00001ac0          	.proc _bzero
  942  00001ac0          	.global _bzero
  943  00001ac0          	_bzero:
  944                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
  945  00001ac0  afbefffc	sw	-4(r29),r30; push fp
  946  00001ac4  001df020	add	r30,r0,r29; fp = sp
  947  00001ac8  afbffff8	sw	-8(r29),r31; push ret addr
  948  00001acc  2fbd0010	subui	r29,r29,#16; alloc local storage
  949  00001ad0  afa20000	sw	0(r29),r2
  950  00001ad4  afa30004	sw	4(r29),r3
  951  00001ad8  8fc20000	lw	r2,(r30)
  952  00001adc  8fdf0004	lw	r31,4(r30)
  953  00001ae0  08000010	j	L270_LF2
  954  00001ae4  54000000	nop; not filled.
  955  00001ae8          	L268_LF2:
  956  00001ae8  20030000	addi	r3,r0,(#0x0)&0xff
  957  00001aec  a0430000	sb	(r2),r3
  958  00001af0  20420001	addi	r2,r2,#1
  959  00001af4          	L270_LF2:
  960  00001af4  001f0820	add	r1,r0,r31
  961  00001af8  23ffffff	addi	r31,r31,#-1
  962  00001afc  6c210000	sgti	r1,r1,#0
  963  00001b00  1420ffe4	bnez	r1,L268_LF2
  964  00001b04  54000000	nop; not filled.
  965  00001b08  8fa20000	lw	r2,0(r29)
  966  00001b0c  8fa30004	lw	r3,4(r29)
  967  00001b10  8fdffff8	lw	r31,-8(r30)
  968  00001b14  001ee820	add	r29,r0,r30
  969  00001b18  8fdefffc	lw	r30,-4(r30)
  970  00001b1c  4be00000	jr	r31
  971  00001b20  54000000	nop
  972  00001b24          	.endproc _bzero
  973                      ;;; Ethan L. Miller, 1999.  Released to the public domain
  974                      ;;;
  975                      ;;; Most of the traps are called in files from libtraps.
  978  00001b24          	.align 2
  979  00001b24          	.proc _exit
  980  00001b24          	.global _exit
  981  00001b24          	_exit:
  982  00001b24  44000300	trap	#0x300
  983  00001b28  4be00000	jr	r31
  984  00001b2c  54000000	nop
  985  00001b30          	.endproc _exit
  987                      ; for the benefit of gcc.
  988  00001b30          	.proc ___main
  989  00001b30          	.global ___main
  990  00001b30          	___main:
  991  00001b30  4be00000	jr	r31
  992  00001b34  54000000	nop
  993  00001b38          	.endproc ___main
  994  00001b38          	.text
  995  00001b38          	.global _etext
  996  00001b38          	_etext:
  997  00001b38          	.align 3
  998  00001b38          	.data
  999  00002018          	.global _edata
 1000  00002018          	_edata:
