 line   address	contents
    1                      ; Linked by DLX-LD.
    2                      ; MemSize 20480
    3                      ; Data size: 26
    4                      ; Text size: 2880
    5                      ; Stack size: 8192
    6  00000000          	.text 0x1000
    7  00001000          	.data 0x2000
    8                      ; Compiled by GCC
   10  00002000          	.align 2
   11  00002000          	LC0_LF0:
   12  00002000  0a496e20	.ascii "\nIn Userprog2, Sum : %d\n\n\000"
   12  00002004  55736572	
   12  00002008  70726f67	
   12  0000200c  322c2053	
   12  00002010  756d203a	
   12  00002014  2025640a	
   12  00002018  0a00    	
   13  0000201a          	.text
   14  00001000          	.align 2
   15  00001000          	.proc _main
   16  00001000          	.global _main
   17  00001000          	_main:
   18                      ;  Function 'main'; 40000 bytes of locals, 0 regs to save.
   19  00001000  afbefffc	sw	-4(r29),r30; push fp
   20  00001004  001df020	add	r30,r0,r29; fp = sp
   21  00001008  afbffff8	sw	-8(r29),r31; push ret addr
   22  0000100c  2fbd9c48	subui	r29,r29,#40008; alloc local storage
   23  00001010  0c000b24	jal	___main
   24  00001014  54000000	nop; not filled.
   25  00001018  20040000	addi	r4,r0,#0
   26  0000101c  20020001	addi	r2,r0,#1
   27  00001020  3c05ffff	lhi	r5,#-1
   28  00001024  24a563c0	addui	r5,r5,#25536
   29  00001028  23dffff8	addi	r31,r30,#-8
   30  0000102c  27e39c3c	addui	r3,r31,#39996
   31  00001030          	L16_LF0:
   32  00001030  03e50820	add	r1,r31,r5
   33  00001034  ac220000	sw	(r1),r2
   34  00001038  20420001	addi	r2,r2,#1
   35  0000103c  23ff07d0	addi	r31,r31,#2000
   36  00001040  03e3082c	sle	r1,r31,r3
   37  00001044  1420ffe8	bnez	r1,L16_LF0
   38  00001048  54000000	nop; not filled.
   39  0000104c  3c03ffff	lhi	r3,#-1
   40  00001050  246363c0	addui	r3,r3,#25536
   41  00001054  23dffff8	addi	r31,r30,#-8
   42  00001058  27e29c3c	addui	r2,r31,#39996
   43  0000105c          	L21_LF0:
   44  0000105c  03e30820	add	r1,r31,r3
   45  00001060  8c210000	lw	r1,(r1)
   46  00001064  00812020	add	r4,r4,r1
   47  00001068  23ff07d0	addi	r31,r31,#2000
   48  0000106c  03e2082c	sle	r1,r31,r2
   49  00001070  1420ffe8	bnez	r1,L21_LF0
   50  00001074  54000000	nop; not filled.
   51  00001078  23bdfff8	addi	r29,r29,#-8
   52  0000107c  3c060000	lhi	r6,((LC0_LF0)>>16)&0xffff
   53  00001080  24c62000	addui	r6,r6,(LC0_LF0)&0xffff
   54  00001084  afa60000	sw	(r29),r6
   55  00001088  afa40004	sw	4(r29),r4
   56  0000108c  0c000058	jal	_Printf
   57  00001090  54000000	nop; not filled.
   58  00001094  23bd0008	addi	r29,r29,#8
   59  00001098  0c000a90	jal	_exit
   60  0000109c  54000000	nop
   61  000010a0          	.endproc _main
   62                      ;;;
   63                      ;;; Stub functions for DLX traps.
   64                      ;;;
   65                      ;;; Ethan L. Miller, 1999.  Released to the public domain.
   66                      ;;;
   67                      ;;; The traps such as Open and Close
   68                      ;;; (note the capital letters) are for use by user programs.  The traps
   69                      ;;; with names such as open and close (lower case) are for use by the OS.
   70                      ;;;
   73  000010a0          	.align 2
   75                      ;;; The following are the traps to be used by user-level programs
   76                      ;;;
   78  000010a0          	.align 2
   79  000010a0          	.proc _Open
   80  000010a0          	.global _Open
   81  000010a0          	_Open:
   82                      ;;; Note that trap #0x213 actually causes a trap vector in the OS of
   83                      ;;; 0x1213.  The same is true for other user traps.  Thus, a user trap
   84                      ;;; with trap #0x240 will result in a trap vector of 0x1240 in the OS.
   85  000010a0  44000213	trap	#0x213
   86  000010a4  4be00000	jr	r31
   87  000010a8  54000000	nop
   88  000010ac          	.endproc _Open
   90  000010ac          	.proc _Close
   91  000010ac          	.global _Close
   92  000010ac          	_Close:
   93  000010ac  44000214	trap	#0x214
   94  000010b0  4be00000	jr	r31
   95  000010b4  54000000	nop
   96  000010b8          	.endproc _Close
   98  000010b8          	.proc _Read
   99  000010b8          	.global _Read
  100  000010b8          	_Read:
  101  000010b8  44000210	trap	#0x210
  102  000010bc  4be00000	jr	r31
  103  000010c0  54000000	nop
  104  000010c4          	.endproc _Read
  106  000010c4          	.proc _Write
  107  000010c4          	.global _Write
  108  000010c4          	_Write:
  109  000010c4  44000211	trap	#0x211
  110  000010c8  4be00000	jr	r31
  111  000010cc  54000000	nop
  112  000010d0          	.endproc _Write
  114  000010d0          	.proc _Lseek
  115  000010d0          	.global _Lseek
  116  000010d0          	_Lseek:
  117  000010d0  44000212	trap	#0x212
  118  000010d4  4be00000	jr	r31
  119  000010d8  54000000	nop
  120  000010dc          	.endproc _Lseek
  122  000010dc          	.proc _Putchar
  123  000010dc          	.global _Putchar
  124  000010dc          	_Putchar:
  125  000010dc  44000280	trap	#0x280
  126  000010e0  4be00000	jr	r31
  127  000010e4  54000000	nop
  128  000010e8          	.endproc _Putchar
  130  000010e8          	.proc _Printf
  131  000010e8          	.global _Printf
  132  000010e8          	_Printf:
  133  000010e8  44000201	trap	#0x201
  134  000010ec  4be00000	jr	r31
  135  000010f0  54000000	nop
  136  000010f4          	.endproc _Printf
  138  000010f4          	.proc _getpid
  139  000010f4          	.global _getpid
  140  000010f4          	_getpid:
  141  000010f4  44000431	trap	#0x431
  142  000010f8  4be00000	jr	r31
  143  000010fc  54000000	nop
  144  00001100          	.endproc _getpid
  146  00001100          	.proc _process_create
  147  00001100          	.global _process_create
  148  00001100          	_process_create:
  149  00001100  44000432	trap	#0x432
  150  00001104  4be00000	jr	r31
  151  00001108  54000000	nop
  152  0000110c          	.endproc _process_create
  155  0000110c          	.proc _sem_create
  156  0000110c          	.global _sem_create
  157  0000110c          	_sem_create:
  158  0000110c  44000450	trap	#0x450
  159  00001110  4be00000	jr	r31
  160  00001114  54000000	nop
  161  00001118          	.endproc _sem_create
  163  00001118          	.proc _sem_wait
  164  00001118          	.global _sem_wait
  165  00001118          	_sem_wait:
  166  00001118  44000451	trap	#0x451
  167  0000111c  4be00000	jr	r31
  168  00001120  54000000	nop
  169  00001124          	.endproc _sem_wait
  171  00001124          	.proc _sem_signal
  172  00001124          	.global _sem_signal
  173  00001124          	_sem_signal:
  174  00001124  44000452	trap	#0x452
  175  00001128  4be00000	jr	r31
  176  0000112c  54000000	nop
  177  00001130          	.endproc _sem_signal
  180                      ; Compiled by GCC
  182  00001130          	.align 2
  183  00001130          	.proc _isspace
  184  00001130          	.global _isspace
  185  00001130          	_isspace:
  186                      ;  Function 'isspace'; 0 bytes of locals, 1 regs to save.
  187  00001130  afbefffc	sw	-4(r29),r30; push fp
  188  00001134  001df020	add	r30,r0,r29; fp = sp
  189  00001138  afbffff8	sw	-8(r29),r31; push ret addr
  190  0000113c  2fbd0010	subui	r29,r29,#16; alloc local storage
  191  00001140  afa20000	sw	0(r29),r2
  192  00001144  83c20003	lb	r2,3(r30)
  193  00001148  201f0000	addi	r31,r0,#0
  194  0000114c  304100ff	andi	r1,r2,#0x00ff
  195  00001150  60210020	seqi	r1,r1,#32
  196  00001154  14200018	bnez	r1,L6_LF2
  197  00001158  54000000	nop; not filled.
  198  0000115c  2041fff7	addi	r1,r2,#-9
  199  00001160  302100ff	andi	r1,r1,#0x00ff
  200  00001164  70210001	sleui	r1,r1,#1
  201  00001168  10200008	beqz	r1,L5_LF2
  202  0000116c  54000000	nop; not filled.
  203  00001170          	L6_LF2:
  204  00001170  201f0001	addi	r31,r0,#1
  205  00001174          	L5_LF2:
  206  00001174  001f0820	add	r1,r0,r31
  207  00001178  8fa20000	lw	r2,0(r29)
  208  0000117c  8fdffff8	lw	r31,-8(r30)
  209  00001180  001ee820	add	r29,r0,r30
  210  00001184  8fdefffc	lw	r30,-4(r30)
  211  00001188  4be00000	jr	r31
  212  0000118c  54000000	nop
  213  00001190          	.endproc _isspace
  214  00001190          	.align 2
  215  00001190          	.proc _isxdigit
  216  00001190          	.global _isxdigit
  217  00001190          	_isxdigit:
  218                      ;  Function 'isxdigit'; 0 bytes of locals, 1 regs to save.
  219  00001190  afbefffc	sw	-4(r29),r30; push fp
  220  00001194  001df020	add	r30,r0,r29; fp = sp
  221  00001198  afbffff8	sw	-8(r29),r31; push ret addr
  222  0000119c  2fbd0010	subui	r29,r29,#16; alloc local storage
  223  000011a0  afa20000	sw	0(r29),r2
  224  000011a4  83df0003	lb	r31,3(r30)
  225  000011a8  20020000	addi	r2,r0,#0
  226  000011ac  23e1ffd0	addi	r1,r31,#-48
  227  000011b0  302100ff	andi	r1,r1,#0x00ff
  228  000011b4  70210009	sleui	r1,r1,#9
  229  000011b8  14200028	bnez	r1,L12_LF2
  230  000011bc  54000000	nop; not filled.
  231  000011c0  23e1ff9f	addi	r1,r31,#-97
  232  000011c4  302100ff	andi	r1,r1,#0x00ff
  233  000011c8  70210005	sleui	r1,r1,#5
  234  000011cc  14200014	bnez	r1,L12_LF2
  235  000011d0  54000000	nop; not filled.
  236  000011d4  33e100ff	andi	r1,r31,#0x00ff
  237  000011d8  64210041	snei	r1,r1,#65
  238  000011dc  14200008	bnez	r1,L11_LF2
  239  000011e0  54000000	nop; not filled.
  240  000011e4          	L12_LF2:
  241  000011e4  20020001	addi	r2,r0,#1
  242  000011e8          	L11_LF2:
  243  000011e8  00020820	add	r1,r0,r2
  244  000011ec  8fa20000	lw	r2,0(r29)
  245  000011f0  8fdffff8	lw	r31,-8(r30)
  246  000011f4  001ee820	add	r29,r0,r30
  247  000011f8  8fdefffc	lw	r30,-4(r30)
  248  000011fc  4be00000	jr	r31
  249  00001200  54000000	nop
  250  00001204          	.endproc _isxdigit
  251  00001204          	.align 2
  252  00001204          	.proc _dstrcpy
  253  00001204          	.global _dstrcpy
  254  00001204          	_dstrcpy:
  255                      ;  Function 'dstrcpy'; 0 bytes of locals, 2 regs to save.
  256  00001204  afbefffc	sw	-4(r29),r30; push fp
  257  00001208  001df020	add	r30,r0,r29; fp = sp
  258  0000120c  afbffff8	sw	-8(r29),r31; push ret addr
  259  00001210  2fbd0010	subui	r29,r29,#16; alloc local storage
  260  00001214  afa20000	sw	0(r29),r2
  261  00001218  afa30004	sw	4(r29),r3
  262  0000121c  8fdf0000	lw	r31,(r30)
  263  00001220  8fc20004	lw	r2,4(r30)
  264  00001224  001f1820	add	r3,r0,r31
  265  00001228          	L19_LF2:
  266  00001228  80410000	lb	r1,(r2)
  267  0000122c  a3e10000	sb	(r31),r1
  268  00001230  20420001	addi	r2,r2,#1
  269  00001234  23ff0001	addi	r31,r31,#1
  270  00001238  302100ff	andi	r1,r1,#0x00ff
  271  0000123c  64210000	snei	r1,r1,#0
  272  00001240  1420ffe4	bnez	r1,L19_LF2
  273  00001244  54000000	nop; not filled.
  274  00001248  00030820	add	r1,r0,r3
  275  0000124c  8fa20000	lw	r2,0(r29)
  276  00001250  8fa30004	lw	r3,4(r29)
  277  00001254  8fdffff8	lw	r31,-8(r30)
  278  00001258  001ee820	add	r29,r0,r30
  279  0000125c  8fdefffc	lw	r30,-4(r30)
  280  00001260  4be00000	jr	r31
  281  00001264  54000000	nop
  282  00001268          	.endproc _dstrcpy
  283  00001268          	.align 2
  284  00001268          	.proc _dstrncpy
  285  00001268          	.global _dstrncpy
  286  00001268          	_dstrncpy:
  287                      ;  Function 'dstrncpy'; 0 bytes of locals, 3 regs to save.
  288  00001268  afbefffc	sw	-4(r29),r30; push fp
  289  0000126c  001df020	add	r30,r0,r29; fp = sp
  290  00001270  afbffff8	sw	-8(r29),r31; push ret addr
  291  00001274  2fbd0018	subui	r29,r29,#24; alloc local storage
  292  00001278  afa20000	sw	0(r29),r2
  293  0000127c  afa30004	sw	4(r29),r3
  294  00001280  afa40008	sw	8(r29),r4
  295  00001284  8fc20000	lw	r2,(r30)
  296  00001288  8fc30004	lw	r3,4(r30)
  297  0000128c  8fdf0008	lw	r31,8(r30)
  298  00001290  00022020	add	r4,r0,r2
  299  00001294  08000024	j	L37_LF2
  300  00001298  54000000	nop; not filled.
  301  0000129c          	L34_LF2:
  302  0000129c  80610000	lb	r1,(r3)
  303  000012a0  a0410000	sb	(r2),r1
  304  000012a4  20630001	addi	r3,r3,#1
  305  000012a8  20420001	addi	r2,r2,#1
  306  000012ac  302100ff	andi	r1,r1,#0x00ff
  307  000012b0  64210000	snei	r1,r1,#0
  308  000012b4  10200018	beqz	r1,L32_LF2
  309  000012b8  54000000	nop; not filled.
  310  000012bc          	L37_LF2:
  311  000012bc  001f0820	add	r1,r0,r31
  312  000012c0  23ffffff	addi	r31,r31,#-1
  313  000012c4  70210000	slei	r1,r1,#0
  314  000012c8  1020ffd0	beqz	r1,L34_LF2
  315  000012cc  54000000	nop; not filled.
  316  000012d0          	L32_LF2:
  317  000012d0  00040820	add	r1,r0,r4
  318  000012d4  8fa20000	lw	r2,0(r29)
  319  000012d8  8fa30004	lw	r3,4(r29)
  320  000012dc  8fa40008	lw	r4,8(r29)
  321  000012e0  8fdffff8	lw	r31,-8(r30)
  322  000012e4  001ee820	add	r29,r0,r30
  323  000012e8  8fdefffc	lw	r30,-4(r30)
  324  000012ec  4be00000	jr	r31
  325  000012f0  54000000	nop
  326  000012f4          	.endproc _dstrncpy
  327  000012f4          	.align 2
  328  000012f4          	.proc _dstrcat
  329  000012f4          	.global _dstrcat
  330  000012f4          	_dstrcat:
  331                      ;  Function 'dstrcat'; 0 bytes of locals, 2 regs to save.
  332  000012f4  afbefffc	sw	-4(r29),r30; push fp
  333  000012f8  001df020	add	r30,r0,r29; fp = sp
  334  000012fc  afbffff8	sw	-8(r29),r31; push ret addr
  335  00001300  2fbd0010	subui	r29,r29,#16; alloc local storage
  336  00001304  afa20000	sw	0(r29),r2
  337  00001308  afa30004	sw	4(r29),r3
  338  0000130c  8fdf0000	lw	r31,(r30)
  339  00001310  001f1820	add	r3,r0,r31
  340  00001314  90610000	lbu	r1,(r3)
  341  00001318  64210000	snei	r1,r1,#0
  342  0000131c  10200018	beqz	r1,L50_LF2
  343  00001320  54000000	nop; not filled.
  344  00001324          	L51_LF2:
  345  00001324  23ff0001	addi	r31,r31,#1
  346  00001328  93e10000	lbu	r1,(r31)
  347  0000132c  64210000	snei	r1,r1,#0
  348  00001330  1420fff0	bnez	r1,L51_LF2
  349  00001334  54000000	nop; not filled.
  350  00001338          	L50_LF2:
  351  00001338  001f1020	add	r2,r0,r31
  352  0000133c  8fdf0004	lw	r31,4(r30)
  353  00001340          	L54_LF2:
  354  00001340  83e10000	lb	r1,(r31)
  355  00001344  a0410000	sb	(r2),r1
  356  00001348  23ff0001	addi	r31,r31,#1
  357  0000134c  20420001	addi	r2,r2,#1
  358  00001350  302100ff	andi	r1,r1,#0x00ff
  359  00001354  64210000	snei	r1,r1,#0
  360  00001358  1420ffe4	bnez	r1,L54_LF2
  361  0000135c  54000000	nop; not filled.
  362  00001360  00030820	add	r1,r0,r3
  363  00001364  8fa20000	lw	r2,0(r29)
  364  00001368  8fa30004	lw	r3,4(r29)
  365  0000136c  8fdffff8	lw	r31,-8(r30)
  366  00001370  001ee820	add	r29,r0,r30
  367  00001374  8fdefffc	lw	r30,-4(r30)
  368  00001378  4be00000	jr	r31
  369  0000137c  54000000	nop
  370  00001380          	.endproc _dstrcat
  371  00001380          	.align 2
  372  00001380          	.proc _dstrncmp
  373  00001380          	.global _dstrncmp
  374  00001380          	_dstrncmp:
  375                      ;  Function 'dstrncmp'; 0 bytes of locals, 4 regs to save.
  376  00001380  afbefffc	sw	-4(r29),r30; push fp
  377  00001384  001df020	add	r30,r0,r29; fp = sp
  378  00001388  afbffff8	sw	-8(r29),r31; push ret addr
  379  0000138c  2fbd0018	subui	r29,r29,#24; alloc local storage
  380  00001390  afa20000	sw	0(r29),r2
  381  00001394  afa30004	sw	4(r29),r3
  382  00001398  afa40008	sw	8(r29),r4
  383  0000139c  afa5000c	sw	12(r29),r5
  384  000013a0  8fc30000	lw	r3,(r30)
  385  000013a4  8fc40004	lw	r4,4(r30)
  386  000013a8  8fc50008	lw	r5,8(r30)
  387  000013ac  20020000	addi	r2,r0,#0
  388  000013b0  0045082a	slt	r1,r2,r5
  389  000013b4  1020003c	beqz	r1,L73_LF2
  390  000013b8  54000000	nop; not filled.
  391  000013bc          	L75_LF2:
  392  000013bc  909f0000	lbu	r31,(r4)
  393  000013c0  67e10000	snei	r1,r31,#0
  394  000013c4  10200038	beqz	r1,L86_LF2
  395  000013c8  54000000	nop; not filled.
  396  000013cc  90610000	lbu	r1,(r3)
  397  000013d0  003f0829	sne	r1,r1,r31
  398  000013d4  1420001c	bnez	r1,L73_LF2
  399  000013d8  54000000	nop; not filled.
  400  000013dc  20630001	addi	r3,r3,#1
  401  000013e0  20840001	addi	r4,r4,#1
  402  000013e4  20420001	addi	r2,r2,#1
  403  000013e8  0045082a	slt	r1,r2,r5
  404  000013ec  1420ffcc	bnez	r1,L75_LF2
  405  000013f0  54000000	nop; not filled.
  406  000013f4          	L73_LF2:
  407  000013f4  00450828	seq	r1,r2,r5
  408  000013f8  10200010	beqz	r1,L80_LF2
  409  000013fc  54000000	nop; not filled.
  410  00001400          	L86_LF2:
  411  00001400  20010000	addi	r1,r0,#0
  412  00001404  08000028	j	L84_LF2
  413  00001408  54000000	nop; not filled.
  414  0000140c          	L80_LF2:
  415  0000140c  907f0000	lbu	r31,(r3)
  416  00001410  90830000	lbu	r3,(r4)
  417  00001414  03e30822	sub	r1,r31,r3
  418  00001418  74210000	sgei	r1,r1,#0
  419  0000141c  2002ffff	addi	r2,r0,#-1
  420  00001420  10200008	beqz	r1,L82_LF2
  421  00001424  54000000	nop; not filled.
  422  00001428  03e31029	sne	r2,r31,r3
  423  0000142c          	L82_LF2:
  424  0000142c  00020820	add	r1,r0,r2
  425  00001430          	L84_LF2:
  426  00001430  8fa20000	lw	r2,0(r29)
  427  00001434  8fa30004	lw	r3,4(r29)
  428  00001438  8fa40008	lw	r4,8(r29)
  429  0000143c  8fa5000c	lw	r5,12(r29)
  430  00001440  8fdffff8	lw	r31,-8(r30)
  431  00001444  001ee820	add	r29,r0,r30
  432  00001448  8fdefffc	lw	r30,-4(r30)
  433  0000144c  4be00000	jr	r31
  434  00001450  54000000	nop
  435  00001454          	.endproc _dstrncmp
  436  00001454          	.align 2
  437  00001454          	.proc _dstrlen
  438  00001454          	.global _dstrlen
  439  00001454          	_dstrlen:
  440                      ;  Function 'dstrlen'; 0 bytes of locals, 1 regs to save.
  441  00001454  afbefffc	sw	-4(r29),r30; push fp
  442  00001458  001df020	add	r30,r0,r29; fp = sp
  443  0000145c  afbffff8	sw	-8(r29),r31; push ret addr
  444  00001460  2fbd0010	subui	r29,r29,#16; alloc local storage
  445  00001464  afa20000	sw	0(r29),r2
  446  00001468  8fdf0000	lw	r31,(r30)
  447  0000146c  20020000	addi	r2,r0,#0
  448  00001470  08000008	j	L97_LF2
  449  00001474  54000000	nop; not filled.
  450  00001478          	L95_LF2:
  451  00001478  20420001	addi	r2,r2,#1
  452  0000147c          	L97_LF2:
  453  0000147c  93e10000	lbu	r1,(r31)
  454  00001480  23ff0001	addi	r31,r31,#1
  455  00001484  64210000	snei	r1,r1,#0
  456  00001488  1420ffec	bnez	r1,L95_LF2
  457  0000148c  54000000	nop; not filled.
  458  00001490  00020820	add	r1,r0,r2
  459  00001494  8fa20000	lw	r2,0(r29)
  460  00001498  8fdffff8	lw	r31,-8(r30)
  461  0000149c  001ee820	add	r29,r0,r30
  462  000014a0  8fdefffc	lw	r30,-4(r30)
  463  000014a4  4be00000	jr	r31
  464  000014a8  54000000	nop
  465  000014ac          	.endproc _dstrlen
  466  000014ac          	.align 2
  467  000014ac          	.proc _dstrstr
  468  000014ac          	.global _dstrstr
  469  000014ac          	_dstrstr:
  470                      ;  Function 'dstrstr'; 0 bytes of locals, 6 regs to save.
  471  000014ac  afbefffc	sw	-4(r29),r30; push fp
  472  000014b0  001df020	add	r30,r0,r29; fp = sp
  473  000014b4  afbffff8	sw	-8(r29),r31; push ret addr
  474  000014b8  2fbd0020	subui	r29,r29,#32; alloc local storage
  475  000014bc  afa20000	sw	0(r29),r2
  476  000014c0  afa30004	sw	4(r29),r3
  477  000014c4  afa40008	sw	8(r29),r4
  478  000014c8  afa5000c	sw	12(r29),r5
  479  000014cc  afa60010	sw	16(r29),r6
  480  000014d0  afa70014	sw	20(r29),r7
  481  000014d4  8fc50000	lw	r5,(r30)
  482  000014d8  8fc70004	lw	r7,4(r30)
  483  000014dc  20030000	addi	r3,r0,#0
  484  000014e0  90e10000	lbu	r1,(r7)
  485  000014e4  20e20001	addi	r2,r7,#1
  486  000014e8  64210000	snei	r1,r1,#0
  487  000014ec  1020001c	beqz	r1,L125_LF2
  488  000014f0  54000000	nop; not filled.
  489  000014f4          	L126_LF2:
  490  000014f4  20630001	addi	r3,r3,#1
  491  000014f8  90410000	lbu	r1,(r2)
  492  000014fc  20420001	addi	r2,r2,#1
  493  00001500  64210000	snei	r1,r1,#0
  494  00001504  1420ffec	bnez	r1,L126_LF2
  495  00001508  54000000	nop; not filled.
  496  0000150c          	L125_LF2:
  497  0000150c  00033020	add	r6,r0,r3
  498  00001510  080000ac	j	L149_LF2
  499  00001514  54000000	nop; not filled.
  500  00001518          	L130_LF2:
  501  00001518  00051820	add	r3,r0,r5
  502  0000151c  00072020	add	r4,r0,r7
  503  00001520  20020000	addi	r2,r0,#0
  504  00001524  0046082a	slt	r1,r2,r6
  505  00001528  1020003c	beqz	r1,L134_LF2
  506  0000152c  54000000	nop; not filled.
  507  00001530          	L136_LF2:
  508  00001530  909f0000	lbu	r31,(r4)
  509  00001534  67e10000	snei	r1,r31,#0
  510  00001538  10200038	beqz	r1,L150_LF2
  511  0000153c  54000000	nop; not filled.
  512  00001540  90610000	lbu	r1,(r3)
  513  00001544  003f0829	sne	r1,r1,r31
  514  00001548  1420001c	bnez	r1,L134_LF2
  515  0000154c  54000000	nop; not filled.
  516  00001550  20630001	addi	r3,r3,#1
  517  00001554  20840001	addi	r4,r4,#1
  518  00001558  20420001	addi	r2,r2,#1
  519  0000155c  0046082a	slt	r1,r2,r6
  520  00001560  1420ffcc	bnez	r1,L136_LF2
  521  00001564  54000000	nop; not filled.
  522  00001568          	L134_LF2:
  523  00001568  00460828	seq	r1,r2,r6
  524  0000156c  10200010	beqz	r1,L141_LF2
  525  00001570  54000000	nop; not filled.
  526  00001574          	L150_LF2:
  527  00001574  20010000	addi	r1,r0,#0
  528  00001578  08000028	j	L132_LF2
  529  0000157c  54000000	nop; not filled.
  530  00001580          	L141_LF2:
  531  00001580  90630000	lbu	r3,(r3)
  532  00001584  90820000	lbu	r2,(r4)
  533  00001588  00620822	sub	r1,r3,r2
  534  0000158c  74210000	sgei	r1,r1,#0
  535  00001590  201fffff	addi	r31,r0,#-1
  536  00001594  10200008	beqz	r1,L143_LF2
  537  00001598  54000000	nop; not filled.
  538  0000159c  0062f829	sne	r31,r3,r2
  539  000015a0          	L143_LF2:
  540  000015a0  001f0820	add	r1,r0,r31
  541  000015a4          	L132_LF2:
  542  000015a4  64210000	snei	r1,r1,#0
  543  000015a8  14200010	bnez	r1,L131_LF2
  544  000015ac  54000000	nop; not filled.
  545  000015b0  00050820	add	r1,r0,r5
  546  000015b4  0800001c	j	L146_LF2
  547  000015b8  54000000	nop; not filled.
  548  000015bc          	L131_LF2:
  549  000015bc  20a50001	addi	r5,r5,#1
  550  000015c0          	L149_LF2:
  551  000015c0  90a10000	lbu	r1,(r5)
  552  000015c4  64210000	snei	r1,r1,#0
  553  000015c8  1420ff4c	bnez	r1,L130_LF2
  554  000015cc  54000000	nop; not filled.
  555  000015d0  20010000	addi	r1,r0,#0
  556  000015d4          	L146_LF2:
  557  000015d4  8fa20000	lw	r2,0(r29)
  558  000015d8  8fa30004	lw	r3,4(r29)
  559  000015dc  8fa40008	lw	r4,8(r29)
  560  000015e0  8fa5000c	lw	r5,12(r29)
  561  000015e4  8fa60010	lw	r6,16(r29)
  562  000015e8  8fa70014	lw	r7,20(r29)
  563  000015ec  8fdffff8	lw	r31,-8(r30)
  564  000015f0  001ee820	add	r29,r0,r30
  565  000015f4  8fdefffc	lw	r30,-4(r30)
  566  000015f8  4be00000	jr	r31
  567  000015fc  54000000	nop
  568  00001600          	.endproc _dstrstr
  569  00001600          	.align 2
  570  00001600          	.proc _dmindex
  571  00001600          	.global _dmindex
  572  00001600          	_dmindex:
  573                      ;  Function 'dmindex'; 0 bytes of locals, 5 regs to save.
  574  00001600  afbefffc	sw	-4(r29),r30; push fp
  575  00001604  001df020	add	r30,r0,r29; fp = sp
  576  00001608  afbffff8	sw	-8(r29),r31; push ret addr
  577  0000160c  2fbd0020	subui	r29,r29,#32; alloc local storage
  578  00001610  afa20000	sw	0(r29),r2
  579  00001614  afa30004	sw	4(r29),r3
  580  00001618  afa40008	sw	8(r29),r4
  581  0000161c  afa5000c	sw	12(r29),r5
  582  00001620  afa60010	sw	16(r29),r6
  583  00001624  8fc40000	lw	r4,(r30)
  584  00001628  8fc60004	lw	r6,4(r30)
  585  0000162c  90810000	lbu	r1,(r4)
  586  00001630  64210000	snei	r1,r1,#0
  587  00001634  10200060	beqz	r1,L164_LF2
  588  00001638  54000000	nop; not filled.
  589  0000163c  00012820	add	r5,r0,r1
  590  00001640          	L165_LF2:
  591  00001640  00061020	add	r2,r0,r6
  592  00001644  80df0000	lb	r31,(r6)
  593  00001648  33e100ff	andi	r1,r31,#0x00ff
  594  0000164c  64210000	snei	r1,r1,#0
  595  00001650  1020003c	beqz	r1,L163_LF2
  596  00001654  54000000	nop; not filled.
  597  00001658  90830000	lbu	r3,(r4)
  598  0000165c          	L169_LF2:
  599  0000165c  33e100ff	andi	r1,r31,#0x00ff
  600  00001660  00610828	seq	r1,r3,r1
  601  00001664  10200010	beqz	r1,L168_LF2
  602  00001668  54000000	nop; not filled.
  603  0000166c  00040820	add	r1,r0,r4
  604  00001670  08000028	j	L173_LF2
  605  00001674  54000000	nop; not filled.
  606  00001678          	L168_LF2:
  607  00001678  20420001	addi	r2,r2,#1
  608  0000167c  805f0000	lb	r31,(r2)
  609  00001680  33e100ff	andi	r1,r31,#0x00ff
  610  00001684  64210000	snei	r1,r1,#0
  611  00001688  1420ffd0	bnez	r1,L169_LF2
  612  0000168c  54000000	nop; not filled.
  613  00001690          	L163_LF2:
  614  00001690  14a0ffac	bnez	r5,L165_LF2
  615  00001694  54000000	nop; not filled.
  616  00001698          	L164_LF2:
  617  00001698  20010000	addi	r1,r0,#0
  618  0000169c          	L173_LF2:
  619  0000169c  8fa20000	lw	r2,0(r29)
  620  000016a0  8fa30004	lw	r3,4(r29)
  621  000016a4  8fa40008	lw	r4,8(r29)
  622  000016a8  8fa5000c	lw	r5,12(r29)
  623  000016ac  8fa60010	lw	r6,16(r29)
  624  000016b0  8fdffff8	lw	r31,-8(r30)
  625  000016b4  001ee820	add	r29,r0,r30
  626  000016b8  8fdefffc	lw	r30,-4(r30)
  627  000016bc  4be00000	jr	r31
  628  000016c0  54000000	nop
  629  000016c4          	.endproc _dmindex
  630  000016c4          	.align 2
  631  000016c4          	.proc _dindex
  632  000016c4          	.global _dindex
  633  000016c4          	_dindex:
  634                      ;  Function 'dindex'; 0 bytes of locals, 2 regs to save.
  635  000016c4  afbefffc	sw	-4(r29),r30; push fp
  636  000016c8  001df020	add	r30,r0,r29; fp = sp
  637  000016cc  afbffff8	sw	-8(r29),r31; push ret addr
  638  000016d0  2fbd0010	subui	r29,r29,#16; alloc local storage
  639  000016d4  afa20000	sw	0(r29),r2
  640  000016d8  afa30004	sw	4(r29),r3
  641  000016dc  8fc20000	lw	r2,(r30)
  642  000016e0  8fc30004	lw	r3,4(r30)
  643  000016e4  08000024	j	L187_LF2
  644  000016e8  54000000	nop; not filled.
  645  000016ec          	L183_LF2:
  646  000016ec  33e100ff	andi	r1,r31,#0x00ff
  647  000016f0  00230828	seq	r1,r1,r3
  648  000016f4  10200010	beqz	r1,L184_LF2
  649  000016f8  54000000	nop; not filled.
  650  000016fc  00020820	add	r1,r0,r2
  651  00001700  08000020	j	L186_LF2
  652  00001704  54000000	nop; not filled.
  653  00001708          	L184_LF2:
  654  00001708  20420001	addi	r2,r2,#1
  655  0000170c          	L187_LF2:
  656  0000170c  805f0000	lb	r31,(r2)
  657  00001710  33e100ff	andi	r1,r31,#0x00ff
  658  00001714  64210000	snei	r1,r1,#0
  659  00001718  1420ffd0	bnez	r1,L183_LF2
  660  0000171c  54000000	nop; not filled.
  661  00001720  20010000	addi	r1,r0,#0
  662  00001724          	L186_LF2:
  663  00001724  8fa20000	lw	r2,0(r29)
  664  00001728  8fa30004	lw	r3,4(r29)
  665  0000172c  8fdffff8	lw	r31,-8(r30)
  666  00001730  001ee820	add	r29,r0,r30
  667  00001734  8fdefffc	lw	r30,-4(r30)
  668  00001738  4be00000	jr	r31
  669  0000173c  54000000	nop
  670  00001740          	.endproc _dindex
  671  00001740          	.align 2
  672  00001740          	.proc _ditoa
  673  00001740          	.global _ditoa
  674  00001740          	_ditoa:
  675                      ;  Function 'ditoa'; 0 bytes of locals, 5 regs to save.
  676  00001740  afbefffc	sw	-4(r29),r30; push fp
  677  00001744  001df020	add	r30,r0,r29; fp = sp
  678  00001748  afbffff8	sw	-8(r29),r31; push ret addr
  679  0000174c  2fbd0020	subui	r29,r29,#32; alloc local storage
  680  00001750  afa20000	sw	0(r29),r2
  681  00001754  afa30004	sw	4(r29),r3
  682  00001758  afa40008	sw	8(r29),r4
  683  0000175c  afa5000c	sw	12(r29),r5
  684  00001760  afa60010	sw	16(r29),r6
  685  00001764  8fc30000	lw	r3,(r30)
  686  00001768  8fc40004	lw	r4,4(r30)
  687  0000176c  68610000	slti	r1,r3,#0
  688  00001770  10200010	beqz	r1,L203_LF2
  689  00001774  54000000	nop; not filled.
  690  00001778  2006002d	addi	r6,r0,(#0x2d)&0xff
  691  0000177c  08000014	j	L216_LF2
  692  00001780  54000000	nop; not filled.
  693  00001784          	L203_LF2:
  694  00001784  64610000	snei	r1,r3,#0
  695  00001788  14200018	bnez	r1,L205_LF2
  696  0000178c  54000000	nop; not filled.
  697  00001790  20060030	addi	r6,r0,(#0x30)&0xff
  698  00001794          	L216_LF2:
  699  00001794  a0860000	sb	(r4),r6
  700  00001798  20840001	addi	r4,r4,#1
  701  0000179c  0800007c	j	L204_LF2
  702  000017a0  54000000	nop; not filled.
  703  000017a4          	L205_LF2:
  704  000017a4  201f0001	addi	r31,r0,#1
  705  000017a8  03e3082c	sle	r1,r31,r3
  706  000017ac  1020001c	beqz	r1,L208_LF2
  707  000017b0  54000000	nop; not filled.
  708  000017b4          	L209_LF2:
  709  000017b4  53e10002	slli	r1,r31,#0x2
  710  000017b8  003f0820	add	r1,r1,r31
  711  000017bc  503f0001	slli	r31,r1,#0x1
  712  000017c0  03e3082c	sle	r1,r31,r3
  713  000017c4  1420ffec	bnez	r1,L209_LF2
  714  000017c8  54000000	nop; not filled.
  715  000017cc          	L208_LF2:
  716  000017cc  2005000a	addi	r5,r0,#10
  717  000017d0          	L212_LF2:
  718  000017d0  03e00035	movi2fp	f0,r31
  719  000017d4  00a00835	movi2fp	f1,r5
  720  000017d8  0401000f	div	f0,f0,f1
  721  000017dc  0000f834	movfp2i	r31,f0
  722  000017e0  00600035	movi2fp	f0,r3
  723  000017e4  03e00835	movi2fp	f1,r31
  724  000017e8  0401000f	div	f0,f0,f1
  725  000017ec  00001034	movfp2i	r2,f0
  726  000017f0  20410030	addi	r1,r2,#48
  727  000017f4  a0810000	sb	(r4),r1
  728  000017f8  20840001	addi	r4,r4,#1
  729  000017fc  00400035	movi2fp	f0,r2
  730  00001800  03e00835	movi2fp	f1,r31
  731  00001804  0401000e	mult	f0,f0,f1
  732  00001808  00000834	movfp2i	r1,f0
  733  0000180c  00611822	sub	r3,r3,r1
  734  00001810  6fe10001	sgti	r1,r31,#1
  735  00001814  1420ffb8	bnez	r1,L212_LF2
  736  00001818  54000000	nop; not filled.
  737  0000181c          	L204_LF2:
  738  0000181c  20060000	addi	r6,r0,(#0x0)&0xff
  739  00001820  a0860000	sb	(r4),r6
  740  00001824  8fa20000	lw	r2,0(r29)
  741  00001828  8fa30004	lw	r3,4(r29)
  742  0000182c  8fa40008	lw	r4,8(r29)
  743  00001830  8fa5000c	lw	r5,12(r29)
  744  00001834  8fa60010	lw	r6,16(r29)
  745  00001838  8fdffff8	lw	r31,-8(r30)
  746  0000183c  001ee820	add	r29,r0,r30
  747  00001840  8fdefffc	lw	r30,-4(r30)
  748  00001844  4be00000	jr	r31
  749  00001848  54000000	nop
  750  0000184c          	.endproc _ditoa
  751  0000184c          	.align 2
  752  0000184c          	.proc _dstrtol
  753  0000184c          	.global _dstrtol
  754  0000184c          	_dstrtol:
  755                      ;  Function 'dstrtol'; 0 bytes of locals, 5 regs to save.
  756  0000184c  afbefffc	sw	-4(r29),r30; push fp
  757  00001850  001df020	add	r30,r0,r29; fp = sp
  758  00001854  afbffff8	sw	-8(r29),r31; push ret addr
  759  00001858  2fbd0020	subui	r29,r29,#32; alloc local storage
  760  0000185c  afa20000	sw	0(r29),r2
  761  00001860  afa30004	sw	4(r29),r3
  762  00001864  afa40008	sw	8(r29),r4
  763  00001868  afa5000c	sw	12(r29),r5
  764  0000186c  afa60010	sw	16(r29),r6
  765  00001870  8fc20000	lw	r2,(r30)
  766  00001874  8fc50004	lw	r5,4(r30)
  767  00001878  8fc40008	lw	r4,8(r30)
  768  0000187c  20030000	addi	r3,r0,#0
  769  00001880  08000008	j	L247_LF2
  770  00001884  54000000	nop; not filled.
  771  00001888          	L220_LF2:
  772  00001888  20420001	addi	r2,r2,#1
  773  0000188c          	L247_LF2:
  774  0000188c  805f0000	lb	r31,(r2)
  775  00001890  33e100ff	andi	r1,r31,#0x00ff
  776  00001894  60210020	seqi	r1,r1,#32
  777  00001898  1420ffec	bnez	r1,L220_LF2
  778  0000189c  54000000	nop; not filled.
  779  000018a0  23e1fff7	addi	r1,r31,#-9
  780  000018a4  302100ff	andi	r1,r1,#0x00ff
  781  000018a8  70210001	sleui	r1,r1,#1
  782  000018ac  1420ffd8	bnez	r1,L220_LF2
  783  000018b0  54000000	nop; not filled.
  784  000018b4  64a10000	snei	r1,r5,#0
  785  000018b8  10200008	beqz	r1,L222_LF2
  786  000018bc  54000000	nop; not filled.
  787  000018c0  aca20000	sw	(r5),r2
  788  000018c4          	L222_LF2:
  789  000018c4  905f0000	lbu	r31,(r2)
  790  000018c8  67e10000	snei	r1,r31,#0
  791  000018cc  10200090	beqz	r1,L248_LF2
  792  000018d0  54000000	nop; not filled.
  793  000018d4  63e1002d	seqi	r1,r31,#45
  794  000018d8  10200014	beqz	r1,L224_LF2
  795  000018dc  54000000	nop; not filled.
  796  000018e0  2006ffff	addi	r6,r0,#-1
  797  000018e4  20420001	addi	r2,r2,#1
  798  000018e8  08000008	j	L225_LF2
  799  000018ec  54000000	nop; not filled.
  800  000018f0          	L224_LF2:
  801  000018f0  20060001	addi	r6,r0,#1
  802  000018f4          	L225_LF2:
  803  000018f4  64810000	snei	r1,r4,#0
  804  000018f8  14200054	bnez	r1,L226_LF2
  805  000018fc  54000000	nop; not filled.
  806  00001900  90410000	lbu	r1,(r2)
  807  00001904  60210030	seqi	r1,r1,#48
  808  00001908  10200040	beqz	r1,L227_LF2
  809  0000190c  54000000	nop; not filled.
  810  00001910  20420001	addi	r2,r2,#1
  811  00001914  905f0000	lbu	r31,(r2)
  812  00001918  63e10078	seqi	r1,r31,#120
  813  0000191c  14200010	bnez	r1,L229_LF2
  814  00001920  54000000	nop; not filled.
  815  00001924  63e10058	seqi	r1,r31,#88
  816  00001928  10200014	beqz	r1,L228_LF2
  817  0000192c  54000000	nop; not filled.
  818  00001930          	L229_LF2:
  819  00001930  20040010	addi	r4,r0,#16
  820  00001934  20420001	addi	r2,r2,#1
  821  00001938  08000014	j	L226_LF2
  822  0000193c  54000000	nop; not filled.
  823  00001940          	L228_LF2:
  824  00001940  20040008	addi	r4,r0,#8
  825  00001944  08000008	j	L226_LF2
  826  00001948  54000000	nop; not filled.
  827  0000194c          	L227_LF2:
  828  0000194c  2004000a	addi	r4,r0,#10
  829  00001950          	L226_LF2:
  830  00001950  2081ffff	addi	r1,r4,#-1
  831  00001954  6c21000f	sgtui	r1,r1,#15
  832  00001958  10200010	beqz	r1,L233_LF2
  833  0000195c  54000000	nop; not filled.
  834  00001960          	L248_LF2:
  835  00001960  00030820	add	r1,r0,r3
  836  00001964  080000c4	j	L245_LF2
  837  00001968  54000000	nop; not filled.
  838  0000196c          	L233_LF2:
  839  0000196c  805f0000	lb	r31,(r2)
  840  00001970  23e1ffd0	addi	r1,r31,#-48
  841  00001974  302100ff	andi	r1,r1,#0x00ff
  842  00001978  70210009	sleui	r1,r1,#9
  843  0000197c  10200014	beqz	r1,L236_LF2
  844  00001980  54000000	nop; not filled.
  845  00001984  33e100ff	andi	r1,r31,#0x00ff
  846  00001988  2021ffd0	addi	r1,r1,#-48
  847  0000198c  08000050	j	L237_LF2
  848  00001990  54000000	nop; not filled.
  849  00001994          	L236_LF2:
  850  00001994  23e1ff9f	addi	r1,r31,#-97
  851  00001998  302100ff	andi	r1,r1,#0x00ff
  852  0000199c  70210019	sleui	r1,r1,#25
  853  000019a0  10200014	beqz	r1,L238_LF2
  854  000019a4  54000000	nop; not filled.
  855  000019a8  33e100ff	andi	r1,r31,#0x00ff
  856  000019ac  2021ffa9	addi	r1,r1,#-87
  857  000019b0  0800002c	j	L237_LF2
  858  000019b4  54000000	nop; not filled.
  859  000019b8          	L238_LF2:
  860  000019b8  23e1ffbf	addi	r1,r31,#-65
  861  000019bc  302100ff	andi	r1,r1,#0x00ff
  862  000019c0  70210019	sleui	r1,r1,#25
  863  000019c4  10200014	beqz	r1,L240_LF2
  864  000019c8  54000000	nop; not filled.
  865  000019cc  33e100ff	andi	r1,r31,#0x00ff
  866  000019d0  2021ffc9	addi	r1,r1,#-55
  867  000019d4  08000008	j	L237_LF2
  868  000019d8  54000000	nop; not filled.
  869  000019dc          	L240_LF2:
  870  000019dc  200103e8	addi	r1,r0,#1000
  871  000019e0          	L237_LF2:
  872  000019e0  0024f82a	slt	r31,r1,r4
  873  000019e4  13e00024	beqz	r31,L246_LF2
  874  000019e8  54000000	nop; not filled.
  875  000019ec  00600035	movi2fp	f0,r3
  876  000019f0  00800835	movi2fp	f1,r4
  877  000019f4  0401000e	mult	f0,f0,f1
  878  000019f8  00001834	movfp2i	r3,f0
  879  000019fc  00611820	add	r3,r3,r1
  880  00001a00  20420001	addi	r2,r2,#1
  881  00001a04  17e0ff64	bnez	r31,L233_LF2
  882  00001a08  54000000	nop; not filled.
  883  00001a0c          	L246_LF2:
  884  00001a0c  64a10000	snei	r1,r5,#0
  885  00001a10  10200008	beqz	r1,L244_LF2
  886  00001a14  54000000	nop; not filled.
  887  00001a18  aca20000	sw	(r5),r2
  888  00001a1c          	L244_LF2:
  889  00001a1c  00600035	movi2fp	f0,r3
  890  00001a20  00c00835	movi2fp	f1,r6
  891  00001a24  0401000e	mult	f0,f0,f1
  892  00001a28  00000834	movfp2i	r1,f0
  893  00001a2c          	L245_LF2:
  894  00001a2c  8fa20000	lw	r2,0(r29)
  895  00001a30  8fa30004	lw	r3,4(r29)
  896  00001a34  8fa40008	lw	r4,8(r29)
  897  00001a38  8fa5000c	lw	r5,12(r29)
  898  00001a3c  8fa60010	lw	r6,16(r29)
  899  00001a40  8fdffff8	lw	r31,-8(r30)
  900  00001a44  001ee820	add	r29,r0,r30
  901  00001a48  8fdefffc	lw	r30,-4(r30)
  902  00001a4c  4be00000	jr	r31
  903  00001a50  54000000	nop
  904  00001a54          	.endproc _dstrtol
  905  00001a54          	.align 2
  906  00001a54          	.proc _bcopy
  907  00001a54          	.global _bcopy
  908  00001a54          	_bcopy:
  909                      ;  Function 'bcopy'; 0 bytes of locals, 3 regs to save.
  910  00001a54  afbefffc	sw	-4(r29),r30; push fp
  911  00001a58  001df020	add	r30,r0,r29; fp = sp
  912  00001a5c  afbffff8	sw	-8(r29),r31; push ret addr
  913  00001a60  2fbd0018	subui	r29,r29,#24; alloc local storage
  914  00001a64  afa20000	sw	0(r29),r2
  915  00001a68  afa30004	sw	4(r29),r3
  916  00001a6c  afa40008	sw	8(r29),r4
  917  00001a70  8fc30000	lw	r3,(r30)
  918  00001a74  8fc20004	lw	r2,4(r30)
  919  00001a78  8fdf0008	lw	r31,8(r30)
  920  00001a7c  08000014	j	L259_LF2
  921  00001a80  54000000	nop; not filled.
  922  00001a84          	L257_LF2:
  923  00001a84  80640000	lb	r4,(r3)
  924  00001a88  a0440000	sb	(r2),r4
  925  00001a8c  20630001	addi	r3,r3,#1
  926  00001a90  20420001	addi	r2,r2,#1
  927  00001a94          	L259_LF2:
  928  00001a94  001f0820	add	r1,r0,r31
  929  00001a98  23ffffff	addi	r31,r31,#-1
  930  00001a9c  6c210000	sgti	r1,r1,#0
  931  00001aa0  1420ffe0	bnez	r1,L257_LF2
  932  00001aa4  54000000	nop; not filled.
  933  00001aa8  8fa20000	lw	r2,0(r29)
  934  00001aac  8fa30004	lw	r3,4(r29)
  935  00001ab0  8fa40008	lw	r4,8(r29)
  936  00001ab4  8fdffff8	lw	r31,-8(r30)
  937  00001ab8  001ee820	add	r29,r0,r30
  938  00001abc  8fdefffc	lw	r30,-4(r30)
  939  00001ac0  4be00000	jr	r31
  940  00001ac4  54000000	nop
  941  00001ac8          	.endproc _bcopy
  942  00001ac8          	.align 2
  943  00001ac8          	.proc _bzero
  944  00001ac8          	.global _bzero
  945  00001ac8          	_bzero:
  946                      ;  Function 'bzero'; 0 bytes of locals, 2 regs to save.
  947  00001ac8  afbefffc	sw	-4(r29),r30; push fp
  948  00001acc  001df020	add	r30,r0,r29; fp = sp
  949  00001ad0  afbffff8	sw	-8(r29),r31; push ret addr
  950  00001ad4  2fbd0010	subui	r29,r29,#16; alloc local storage
  951  00001ad8  afa20000	sw	0(r29),r2
  952  00001adc  afa30004	sw	4(r29),r3
  953  00001ae0  8fc20000	lw	r2,(r30)
  954  00001ae4  8fdf0004	lw	r31,4(r30)
  955  00001ae8  08000010	j	L270_LF2
  956  00001aec  54000000	nop; not filled.
  957  00001af0          	L268_LF2:
  958  00001af0  20030000	addi	r3,r0,(#0x0)&0xff
  959  00001af4  a0430000	sb	(r2),r3
  960  00001af8  20420001	addi	r2,r2,#1
  961  00001afc          	L270_LF2:
  962  00001afc  001f0820	add	r1,r0,r31
  963  00001b00  23ffffff	addi	r31,r31,#-1
  964  00001b04  6c210000	sgti	r1,r1,#0
  965  00001b08  1420ffe4	bnez	r1,L268_LF2
  966  00001b0c  54000000	nop; not filled.
  967  00001b10  8fa20000	lw	r2,0(r29)
  968  00001b14  8fa30004	lw	r3,4(r29)
  969  00001b18  8fdffff8	lw	r31,-8(r30)
  970  00001b1c  001ee820	add	r29,r0,r30
  971  00001b20  8fdefffc	lw	r30,-4(r30)
  972  00001b24  4be00000	jr	r31
  973  00001b28  54000000	nop
  974  00001b2c          	.endproc _bzero
  975                      ;;; Ethan L. Miller, 1999.  Released to the public domain
  976                      ;;;
  977                      ;;; Most of the traps are called in files from libtraps.
  980  00001b2c          	.align 2
  981  00001b2c          	.proc _exit
  982  00001b2c          	.global _exit
  983  00001b2c          	_exit:
  984  00001b2c  44000300	trap	#0x300
  985  00001b30  4be00000	jr	r31
  986  00001b34  54000000	nop
  987  00001b38          	.endproc _exit
  989                      ; for the benefit of gcc.
  990  00001b38          	.proc ___main
  991  00001b38          	.global ___main
  992  00001b38          	___main:
  993  00001b38  4be00000	jr	r31
  994  00001b3c  54000000	nop
  995  00001b40          	.endproc ___main
  996  00001b40          	.text
  997  00001b40          	.global _etext
  998  00001b40          	_etext:
  999  00001b40          	.align 3
 1000  00001b40          	.data
 1001  0000201a          	.global _edata
 1002  0000201a          	_edata:
